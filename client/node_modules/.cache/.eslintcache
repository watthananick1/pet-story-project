[{"/Users/watthananick/pet-story-project/client/src/index.js":"1","/Users/watthananick/pet-story-project/client/src/App.js":"2","/Users/watthananick/pet-story-project/client/src/context/AuthContext.js":"3","/Users/watthananick/pet-story-project/client/src/context/AuthReducer.js":"4","/Users/watthananick/pet-story-project/client/src/pages/login/Login.jsx":"5","/Users/watthananick/pet-story-project/client/src/pages/profile/Profile.jsx":"6","/Users/watthananick/pet-story-project/client/src/pages/typepet/TypePet.jsx":"7","/Users/watthananick/pet-story-project/client/src/pages/home/Home.jsx":"8","/Users/watthananick/pet-story-project/client/src/pages/register/Register.jsx":"9","/Users/watthananick/pet-story-project/client/src/apiCalls.js":"10","/Users/watthananick/pet-story-project/client/src/components/sidebar/Sidebar.jsx":"11","/Users/watthananick/pet-story-project/client/src/components/feed/Feed.jsx":"12","/Users/watthananick/pet-story-project/client/src/components/topbar/Topbar.jsx":"13","/Users/watthananick/pet-story-project/client/src/components/rightbar/Rightbar.jsx":"14","/Users/watthananick/pet-story-project/client/src/dummyData.js":"15","/Users/watthananick/pet-story-project/client/src/components/post/Post.jsx":"16","/Users/watthananick/pet-story-project/client/src/components/online/Online.jsx":"17","/Users/watthananick/pet-story-project/client/src/components/closeFriend/CloseFriend.jsx":"18","/Users/watthananick/pet-story-project/client/src/components/share/Share.jsx":"19","/Users/watthananick/pet-story-project/client/src/components/modelEdit/ModalEdit.jsx":"20","/Users/watthananick/pet-story-project/client/src/components/search/Search.jsx":"21"},{"size":313,"mtime":1617783295000,"results":"22","hashOfConfig":"23"},{"size":1098,"mtime":1686466401160,"results":"24","hashOfConfig":"23"},{"size":2394,"mtime":1686571069948,"results":"25","hashOfConfig":"23"},{"size":913,"mtime":1617783295000,"results":"26","hashOfConfig":"23"},{"size":6718,"mtime":1686570754325,"results":"27","hashOfConfig":"23"},{"size":2511,"mtime":1686572929664,"results":"28","hashOfConfig":"23"},{"size":3411,"mtime":1686008859944,"results":"29","hashOfConfig":"23"},{"size":426,"mtime":1617783295000,"results":"30","hashOfConfig":"23"},{"size":9976,"mtime":1685919688768,"results":"31","hashOfConfig":"23"},{"size":544,"mtime":1686461816113,"results":"32","hashOfConfig":"23"},{"size":2326,"mtime":1686573547784,"results":"33","hashOfConfig":"23"},{"size":3509,"mtime":1686574447413,"results":"34","hashOfConfig":"23"},{"size":8425,"mtime":1686574146023,"results":"35","hashOfConfig":"23"},{"size":4586,"mtime":1686573065823,"results":"36","hashOfConfig":"23"},{"size":2525,"mtime":1684483667982,"results":"37","hashOfConfig":"23"},{"size":19790,"mtime":1686724401047,"results":"38","hashOfConfig":"23"},{"size":669,"mtime":1686573967611,"results":"39","hashOfConfig":"23"},{"size":468,"mtime":1684767554320,"results":"40","hashOfConfig":"23"},{"size":10595,"mtime":1686273709805,"results":"41","hashOfConfig":"23"},{"size":6804,"mtime":1686723632080,"results":"42","hashOfConfig":"23"},{"size":1523,"mtime":1686573608352,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"ldi8gy",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"47"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},"/Users/watthananick/pet-story-project/client/src/index.js",[],[],[],"/Users/watthananick/pet-story-project/client/src/App.js",[],[],"/Users/watthananick/pet-story-project/client/src/context/AuthContext.js",[],[],"/Users/watthananick/pet-story-project/client/src/context/AuthReducer.js",[],[],"/Users/watthananick/pet-story-project/client/src/pages/login/Login.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/pages/profile/Profile.jsx",["117"],[],"import \"./profile.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport Feed from \"../../components/feed/Feed\";\nimport Rightbar from \"../../components/rightbar/Rightbar\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport ReactLoading from \"react-loading\";\nimport Cookies from \"js-cookie\";\n\nimport { Avatar } from \"@mui/material\";\n\nexport default function Profile() {\n  const [user, setUser] = useState({});\n  const { firstName } = useParams();\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const res = await axios.get(`/api/users/user/${firstName}/date`, { \n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        setUser(res?.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchUser();\n  }, [firstName]);\n\n  console.log(`User =`, user[0]);\n\n  if (Object.keys(user).length === 0) {\n    return (\n      <div className=\"loadingWrapper\">\n        <ReactLoading\n          type=\"spin\"\n          color=\"#6200E8\"\n          height={\"10%\"}\n          width={\"10%\"}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Topbar />\n      <div className=\"profile\">\n        <Sidebar />\n        <div className=\"profileRight\">\n          <div className=\"profileRightTop\">\n            <div className=\"profileCover\">\n              <img\n                className=\"profileCoverImg\"\n                src={\n                  user.coverPicture\n                    ? user.coverPicture\n                    : \"/assets/person/noCover.png\"\n                }\n                alt=\"\"\n              />\n              <Avatar\n                className=\"profileUserImg\"\n                alt=\"Profile Picture\"\n                src={user.profilePicture || \"/assets/person/noAvatar.png\"}\n                style={{ width: \"150px\", height: \"150px\" }}\n              />\n            </div>\n            <div className=\"profileInfo\">\n              <h4 className=\"profileInfoName\">\n                {user[0].firstName} {user[0].lastName}\n              </h4>\n              <span className=\"profileInfoDesc\">{user[0]?.desc}</span>\n            </div>\n          </div>\n          <div className=\"profileRightBottom\">\n            <Feed firstName={firstName} onProfile={true} />\n            <Rightbar user={user[0]} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/watthananick/pet-story-project/client/src/pages/typepet/TypePet.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/pages/home/Home.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/pages/register/Register.jsx",["118","119","120","121","122","123","124","125"],[],"import { useState, useRef } from \"react\";\nimport \"./register.css\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useHistory } from \"react-router\";\nimport axios from \"axios\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Card from \"@mui/material/Card\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"\">\n        Pet story\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nfunction Register() {\n  const history = useHistory();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(\"\");\n  const [dateOfBirth, setDateOfBirth] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [ConfirmVisible, setConfirmVisible] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  const handleClickShowConfirm = () => {\n    setConfirmVisible(!ConfirmVisible);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (confirmPassword.current.value !== password) {\n      confirmPassword.current.setCustomValidity(\"Passwords don't match!\");\n    } else {\n      const user = {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password,\n        dateOfBirth: dateOfBirth,\n        status: \"active\",\n        followers: [],\n        followings: [],\n        statusUser: \"USER\",\n        typePets: [],\n        profilePicture: \"\",\n        coverPicture: \"\",\n      };\n      try {\n        const res = await axios.post(\"/api/auth/register\", user);\n        if (res.status === 200) {\n          localStorage.setItem(\"Uid\", res.data.member_id);\n          history.push({\n            pathname: \"/typepet\",\n            state: res.data.member_id, // pass the user object as a prop\n          }); // redirect to the TypePet page\n        } else {\n          console.log(\"Registration failed. Status:\", res.status);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  const handleFirstNameChange = (event) => {\n    setFirstName(event.target.value);\n  };\n\n  const handleLastNameChange = (event) => {\n    setLastName(event.target.value);\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleDateOfBirthChange = (event) => {\n    setDateOfBirth(event.target.value);\n  };\n\n  const handleConfirmPasswordChange = (event) => {\n    setConfirmPassword(event.target.value);\n  };\n\n  const theme = createTheme();\n\n  return (\n    <div className=\"login\">\n      <div className=\"loginWrapper\">\n        <ThemeProvider theme={theme}>\n          <Grid container component=\"main\">\n            <CssBaseline />\n            <Grid\n              item\n              xs={false}\n              sm={4}\n              md={7}\n              sx={{\n                backgroundImage:\n                  \"url(https://firebasestorage.googleapis.com/v0/b/pet-story-f51e3.appspot.com/o/mainData%2FloginImage1.jpg?alt=media&token=4547e22e-e032-4eb9-82fa-84551789d27e)\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundColor: (t) =>\n                  t.palette.mode === \"light\"\n                    ? t.palette.grey[50]\n                    : t.palette.grey[900],\n                backgroundSize: \"cover\",\n                backgroundPosition: \"center\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            />\n            <Grid\n              item\n              xs={12}\n              sm={8}\n              md={5}\n              component={Paper}\n              elevation={6}\n              square\n            >\n              <Box\n                sx={{\n                  my: 8,\n                  mx: 4,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                  Register\n                </Typography>\n                <Box\n                  component=\"form\"\n                  noValidate\n                  onSubmit={handleSubmit}\n                  sx={{ mt: 2 }}\n                >\n                  <TextField\n                    sx={{ mb: 2 }}\n                    autoComplete=\"fname\"\n                    name=\"firstName\"\n                    required\n                    fullWidth\n                    id=\"firstName\"\n                    label=\"First Name\"\n                    autoFocus\n                    value={firstName}\n                    onChange={handleFirstNameChange}\n                  />\n                  <TextField\n                    sx={{ mb: 2 }}\n                    required\n                    fullWidth\n                    id=\"lastName\"\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    autoComplete=\"lname\"\n                    value={lastName}\n                    onChange={handleLastNameChange}\n                  />\n                  <TextField\n                    sx={{ mb: 2 }}\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                  />\n                  <TextField\n                    sx={{ mb: 2 }}\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type={passwordVisible ? \"text\" : \"password\"}\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={() => setPasswordVisible(!passwordVisible)}\n                            edge=\"end\"\n                          >\n                            {passwordVisible ? (\n                              <VisibilityOff />\n                            ) : (\n                              <Visibility />\n                            )}\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                  <TextField\n                    sx={{ mb: 2 }}\n                    required\n                    fullWidth\n                    id=\"confirmPassword\"\n                    label=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    type={ConfirmVisible ? \"text\" : \"password\"}\n                    autoComplete=\"new-password\"\n                    value={confirmPassword}\n                    onChange={handleConfirmPasswordChange}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleClickShowConfirm}\n                            edge=\"end\"\n                          >\n                            {ConfirmVisible ? (\n                              <VisibilityOff />\n                            ) : (\n                              <Visibility />\n                            )}\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"dateOfBirth\"\n                    label=\"Date of Birth\"\n                    type=\"date\"\n                    name=\"dateOfBirth\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    value={dateOfBirth}\n                    onChange={handleDateOfBirthChange}\n                  />\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                  >\n                    Sign In\n                  </Button>\n                  <Grid container justifyContent=\"flex-end\">\n                    <Grid item>\n                      <Link href=\"/login\" variant=\"body2\">\n                        Already have an account? Sign in\n                      </Link>\n                    </Grid>\n                  </Grid>\n                  <Copyright sx={{ mt: 5 }} />\n                </Box>\n              </Box>\n            </Grid>\n          </Grid>\n        </ThemeProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default Register;\n","/Users/watthananick/pet-story-project/client/src/apiCalls.js",[],[],"/Users/watthananick/pet-story-project/client/src/components/sidebar/Sidebar.jsx",["126"],[],"import \"./sidebar.css\";\nimport {\n  RssFeed,\n  Chat,\n  PlayCircleFilledOutlined,\n  Group,\n  Bookmark,\n  HelpOutline,\n  WorkOutline,\n  Event,\n  School,\n} from \"@material-ui/icons\";\nimport { Users } from \"../../dummyData\";\nimport CloseFriend from \"../closeFriend/CloseFriend\";\nimport Cookies from \"js-cookie\";\n\nexport default function Sidebar() {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebarWrapper\">\n        <ul className=\"sidebarList\">\n          <li className=\"sidebarListItem\">\n            <RssFeed className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Feed</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <Chat className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Chats</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <PlayCircleFilledOutlined className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Videos</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <Group className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Groups</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <Bookmark className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Bookmarks</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <HelpOutline className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Questions</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <WorkOutline className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Jobs</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <Event className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Events</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <School className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Courses</span>\n          </li>\n        </ul>\n        <button className=\"sidebarButton\">Show More</button>\n        <hr className=\"sidebarHr\" />\n        <ul className=\"sidebarFriendList\">\n          {Users.map((user, index) => (\n            <CloseFriend key={index} user={user} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","/Users/watthananick/pet-story-project/client/src/components/feed/Feed.jsx",["127"],[],"import { useContext, useEffect, useState } from \"react\";\nimport Post from \"../post/Post\";\nimport Share from \"../share/Share\";\nimport \"./feed.css\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport ReactLoading from \"react-loading\";\nimport io from \"socket.io-client\";\nimport Cookies from \"js-cookie\";\n\nexport default function Feed({ firstName, onProfile }) {\n  const [posts, setPosts] = useState([]);\n  const { user } = useContext(AuthContext);\n  const [loading, setLoading] = useState(true);\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    const socket = io.connect(process.env.PATH_ID); // Fix the environment variable name\n    const fetchPosts = async () => {\n      try {\n        const currentTime = new Date().getTime();\n        setLoading(true);\n        const res = await axios.get(`/api/posts/${user.member_id}/date`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n          cancelToken: source.token,\n        });\n        const sortedPosts = res.data.sort((a, b) => {\n          const timeDiffA = Math.abs(\n            currentTime - new Date(a.createdAt.seconds * 1000).getTime()\n          );\n          const timeDiffB = Math.abs(\n            currentTime - new Date(b.createdAt.seconds * 1000).getTime()\n          );\n          return timeDiffA - timeDiffB;\n        });\n        setPosts(sortedPosts);\n      } catch (err) {\n        if (axios.isCancel(err)) {\n          console.log(\"Request canceled:\", err.message);\n        } else {\n          console.log(err);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const fetchUserPosts = async () => {\n      try {\n        const currentTime = new Date().getTime();\n\n        setLoading(true);\n        const res = await axios.get(`/api/posts/user/${firstName}/date`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        const sortedPosts = res.data.sort((a, b) => {\n          const timeDiffA = Math.abs(\n            currentTime - new Date(a.createdAt.seconds * 1000).getTime()\n          );\n          const timeDiffB = Math.abs(\n            currentTime - new Date(b.createdAt.seconds * 1000).getTime()\n          );\n          return timeDiffA - timeDiffB;\n        });\n        setPosts(sortedPosts);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const handleNewPost = (newPost) => {\n      setPosts((prevPosts) => [newPost, ...prevPosts]);\n    };\n\n    if (onProfile) {\n      fetchUserPosts();\n    } else {\n      fetchPosts();\n    }\n\n    socket.on(\"newPost\", handleNewPost);\n\n    return () => {\n      source.cancel(\"Component unmounted\");\n      console.log(\"Component unmounted\", source);\n      socket.off(\"newPost\", handleNewPost);\n      socket.disconnect();\n    };\n  }, [onProfile, firstName, user.member_id]);\n\n  return (\n    <div className=\"feed\">\n      <div className=\"feedWrapper\">\n        {!firstName || firstName === user?.firstName ? <Share /> : null}\n        {loading ? (\n          <div className=\"loadingWrapper\">\n            <ReactLoading\n              type=\"spin\"\n              color=\"#6200E8\"\n              height={\"10%\"}\n              width={\"10%\"}\n            />\n          </div>\n        ) : (\n          <>\n            {posts.map((p, i) => (\n              <Post key={i} isPost={p} indexPost={i} />\n            ))}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/watthananick/pet-story-project/client/src/components/topbar/Topbar.jsx",["128","129","130","131","132","133","134","135","136","137"],[],"import \"./topbar.css\";\nimport {\n  Search,\n  Person,\n  Chat,\n  Notifications,\n  Settings,\n  Logout,\n} from \"@mui/icons-material\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useContext, useState, useEffect, useRef } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport ReactLoading from \"react-loading\";\nimport Cookies from \"js-cookie\";\n\nimport {\n  Avatar,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  Divider,\n  TextField,\n  Chip,\n  Stack,\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemText,\n  InputAdornment,\n} from \"@mui/material\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport { performSearch } from \"../search/Search\";\n\nexport default function Topbar() {\n  const { user } = useContext(AuthContext);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [searchOptions, setSearchOptions] = useState([]);\n  const [searchResponse, setSearchResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const open = Boolean(anchorEl);\n  const history = useHistory();\n  const inputRef = useRef(null);\n  const token = Cookies.get(\"token\");\n\n  const handleClick = () => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleProfileClick = () => {\n    handleClose();\n    history.push(`/profile/${user?.firstName}`);\n  };\n\n  const handleSearchProfileClick = (firstName) => {\n    handleClose();\n    history.push(`/profile/${firstName}`);\n  };\n\n  const handleLogout = async () => {\n    try {\n      const response = await axios.get(\"/api/auth/logout\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      console.log(response.data.message); // \"Logout successful\"\n      Cookies.remove(\"token\");\n      localStorage.clear();\n      window.location.href = `/`;\n    } catch (error) {\n      console.error(error.response.data.error); // \"Logout failed\"\n    }\n    handleClose();\n  };\n\n  useEffect(() => {\n    const fetchSearchResults = async () => {\n      setLoading(true);\n      const trimmedSearchValue = searchValue && searchValue.trim();\n      const response = await performSearch(trimmedSearchValue);\n      setLoading(false);\n      setSearchResponse(response);\n\n      if (response) {\n        setSearchOptions(response);\n      } else {\n        setSearchOptions([]);\n      }\n    };\n\n    fetchSearchResults();\n  }, [searchValue]);\n\n  const handleSearchChange = (event) => {\n    const { value } = event.target;\n    setSearchValue(value);\n    console.log(\"Search= \", value);\n  };\n\n  return (\n    <div className=\"topbarContainer\">\n      <div className=\"topbarLeft\">\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <span className=\"logo\">Pet Story</span>\n        </Link>\n      </div>\n      <div className=\"topbarCenter\">\n        <div className=\"searchbar\">\n          <Search className=\"searchIcon\" />\n          <Autocomplete\n            // Styles for Autocomplete component\n            sx={{\n              display: \"inline-block\",\n              width: \"100%\",\n              outline: \"none\",\n              \"& input\": {\n                bgcolor: \"background.paper\",\n                color: (theme) =>\n                  theme.palette.getContrastText(theme.palette.background.paper),\n              },\n            }}\n            size=\"small\"\n            onClick={handleClick}\n            id=\"custom-input\"\n            loading={loading}\n            options={searchOptions}\n            getOptionLabel={(option) =>\n              `${option.firstName} ${option.lastName}` || option.content || \"\"\n            }\n            renderInput={(params) => (\n              <>\n                <TextField\n                  {...params}\n                  size=\"small\"\n                  variant=\"standard\"\n                  sx={{\n                    mt: 2,\n                    mb: 2,\n                    boxShadow: \"none\",\n                    width: \"97%\",\n                    borderRadius: 30,\n                    outline: \"none\",\n                    border: \"none\",\n                  }}\n                  onChange={handleSearchChange}\n                  placeholder=\"Search\"\n                />\n              </>\n            )}\n            renderOption={(props, option) => {\n              if (option.type === \"User\") {\n                return (\n                  <li {...props}>\n                    <Stack\n                      direction=\"row\"\n                      alignItems=\"center\"\n                      onClick={() =>\n                        handleSearchProfileClick(option?.firstName)\n                      }\n                    >\n                      <Avatar\n                        src={`${option.profilePicture}`}\n                        sx={{ width: 35, height: 35, mt: 0.5, mb: 0.5, mr: 1 }}\n                      />\n                      <span>\n                        {option?.firstName} {option?.lastName}\n                      </span>\n                    </Stack>\n                  </li>\n                );\n              }\n              if (option.type === \"Post\") {\n                return (\n                  <li {...props}>\n                    <Stack direction=\"row\" alignItems=\"center\">\n                      <span>{`Post ${option.content}`}</span>\n                    </Stack>\n                  </li>\n                );\n              }\n              return null;\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"topbarRight\">\n        <div className=\"topbarLinks\"></div>\n        <div className=\"topbarIcons\">\n          <div className=\"topbarIconItem\">\n            {/* <Person\n              onClick={(event) => setAnchorEl(event.currentTarget)}\n              className=\"topbarIcon\"\n            /> */}\n            <Menu\n              anchorEl={anchorEl}\n              open={open}\n              onClose={handleClose}\n              onClick={handleClose}\n              PaperProps={{\n                elevation: 0,\n                sx: {\n                  overflow: \"visible\",\n                  filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\n                  mt: 1.5,\n                  \"& .MuiAvatar-root\": {\n                    width: 32,\n                    height: 32,\n                    ml: -0.5,\n                    mr: 1,\n                  },\n                  \"&:before\": {\n                    content: '\"\"',\n                    display: \"block\",\n                    position: \"absolute\",\n                    top: 0,\n                    right: 14,\n                    width: 10,\n                    height: 10,\n                    bgcolor: \"background.paper\",\n                    transform: \"translateY(-50%) rotate(45deg)\",\n                    zIndex: 0,\n                  },\n                },\n              }}\n              transformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n              anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\n            >\n              <MenuItem onClick={handleProfileClick}>\n                <span>\n                  <Avatar />\n                  <span>Profile</span>\n                </span>\n              </MenuItem>\n              <MenuItem onClick={handleProfileClick}>\n                <ListItemIcon>\n                  <Settings fontSize=\"small\" />\n                </ListItemIcon>\n                Settings\n              </MenuItem>\n              <MenuItem onClick={handleLogout}>\n                <ListItemIcon>\n                  <Logout fontSize=\"small\" />\n                </ListItemIcon>\n                Logout\n              </MenuItem>\n            </Menu>\n          </div>\n        </div>\n        <div className=\"topbarIconItem\">\n          <Link\n            to=\"/messenger\"\n            style={{ color: \"inherit\", textDecoration: \"none\" }}\n          >\n            <Chat className=\"topbarIcon\" />\n          </Link>\n          <span className=\"topbarIconBadge\">1</span>\n        </div>\n        <div className=\"topbarIconItem\">\n          <Notifications className=\"topbarIcon\" />\n          <span className=\"topbarIconBadge\">1</span>\n        </div>\n        <div>\n          <Avatar\n            aria-label=\"profile\"\n            src={user?.profilePicture}\n            sx={{ width: 35, height: 35, mt: 0.5, mb: 0.5 }}\n            onClick={(event) => setAnchorEl(event.currentTarget)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/watthananick/pet-story-project/client/src/components/rightbar/Rightbar.jsx",["138"],[],"import \"./rightbar.css\";\nimport { Users } from \"../../dummyData\";\nimport Online from \"../online/Online\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { Add, Remove } from \"@material-ui/icons\";\nimport Cookies from \"js-cookie\";\n\nimport {\n  Avatar,\n} from \"@mui/material\";\n\nexport default function Rightbar({ user }) {\n  // const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const [friends, setFriends] = useState([]);\n  const { user: currentUser, dispatch } = useContext(AuthContext);\n  const [followed, setFollowed] = useState(\n    currentUser.followers.includes(user?.member_id)\n  );\n  const token = Cookies.get(\"token\");\n  \n  //++++++++++++++++++ fetch Data +++++++++++++++++++\n\n  useEffect(() => {\n    const getFriends = async () => {\n      try {\n        const friendList = await axios.get(`/api/users/friends/${user.member_id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        setFriends(friendList.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getFriends();\n  }, [user]);\n  \n  //++++++++++ on Click Button +++++++++++\n\n  const handleClick = async () => {\n    try {\n      if (followed) {\n        await axios.put(`/api/users/${user?.member_id}/unfollow`, {\n          member_id: currentUser?.member_id,\n        });\n        dispatch({ type: \"UNFOLLOW\", payload: user?.member_id });\n      } else {\n        await axios.put(`/api/users/${user?.member_id}/follow`, {\n          member_id: currentUser?.member_id,\n        });\n        dispatch({ type: \"FOLLOW\", payload: user?.member_id });\n      }\n      setFollowed(!followed);\n    } catch (err) {\n    }\n  };\n\n  const HomeRightbar = () => {\n    return (\n      <>\n        <div className=\"birthdayContainer\">\n          <img className=\"birthdayImg\" src=\"assets/gift.png\" alt=\"\" />\n          <span className=\"birthdayText\">\n            <b>Pola Foster</b> and <b>3 other friends</b> have a birhday today.\n          </span>\n        </div>\n        <img className=\"rightbarAd\" src=\"assets/ad.png\" alt=\"\" />\n        <h4 className=\"rightbarTitle\">Online Friends</h4>\n        <ul className=\"rightbarFriendList\">\n          {Users.map((u, index) => (\n            <Online key={index} user={u} />\n          ))}\n        </ul>\n      </>\n    );\n  };\n\n  const ProfileRightbar = () => {\n    return (\n      <>\n        {user?.firstName !== currentUser?.firstName && (\n          <button className=\"rightbarFollowButton\" onClick={handleClick}>\n            {followed ? \"Unfollow\" : \"Follow\"}\n            {followed ? <Remove /> : <Add />}\n          </button>\n        )}\n        <h4 className=\"rightbarTitle\">User information</h4>\n        <div className=\"rightbarInfo\">\n          <div className=\"rightbarInfoItem\">\n            <span className=\"rightbarInfoKey\">City:</span>\n            <span className=\"rightbarInfoValue\">{user.city ? user?.city : \"-\"}</span>\n          </div>\n          <div className=\"rightbarInfoItem\">\n            <span className=\"rightbarInfoKey\">From:</span>\n            <span className=\"rightbarInfoValue\">{user.from ? user?.from : \"-\"}</span>\n          </div>\n          <div className=\"rightbarInfoItem\">\n            <span className=\"rightbarInfoKey\">Relationship:</span>\n            <span className=\"rightbarInfoValue\">\n              {user?.relationship === 1\n                ? \"Single\"\n                : user?.relationship === 1\n                ? \"Married\"\n                : \"-\"}\n            </span>\n          </div>\n        </div>\n        <h4 className=\"rightbarTitle\">User friends</h4>\n        <div className=\"rightbarFollowings\">\n          {friends.map((friend) => (\n            <Link\n              to={\"/profile/\" + friend?.firstName}\n              style={{ textDecoration: \"none\" }}\n            >\n              <div className=\"rightbarFollowing\">\n                <Avatar\n                  className=\"rightbarFollowingImg\"\n                  aria-label=\"recipe\"\n                  src={friend.profilePicture ? friend?.profilePicture : \"/assets/person/noAvatar.png\"}\n                  style={{ width: \"39px\", height: \"39px\" }}\n                ></Avatar>\n                <span className=\"rightbarFollowingName\">{friend?.firstName} {friend?.lastName}</span>\n              </div>\n            </Link>\n          ))}\n        </div>\n      </>\n    );\n  };\n  return (\n    <div className=\"rightbar\">\n      <div className=\"rightbarWrapper\">\n        {user ? <ProfileRightbar /> : <HomeRightbar />}\n      </div>\n    </div>\n  );\n}\n","/Users/watthananick/pet-story-project/client/src/dummyData.js",[],[],"/Users/watthananick/pet-story-project/client/src/components/post/Post.jsx",["139","140","141","142","143","144","145","146","147"],[],"/Users/watthananick/pet-story-project/client/src/components/online/Online.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/components/closeFriend/CloseFriend.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/components/share/Share.jsx",["148","149","150","151","152","153"],[],"import \"./share.css\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/storage\";\nimport React, { useContext, useRef, useState, useEffect } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\n\nimport {\n  Avatar,\n  Chip,\n  Autocomplete,\n  TextField,\n  Grid,\n  IconButton,\n  FormControl,\n  InputLabel,\n} from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport {\n  PermMedia,\n  Cancel,\n  Send as SendIcon,\n  PhotoCameraBack as PhotoCameraBackIcon,\n} from \"@mui/icons-material\";\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst storage = firebase.storage();\n\nexport default function Share({ onNewPost }) {\n  const { user } = useContext(AuthContext);\n  const desc = useRef();\n  const [typePets, setTypePets] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [typeData, setTypeData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [privacy, setPrivacy] = useState(\"normal\");\n  const MAX_TAGS_LIMIT = 3;\n\n  const privacyOptions = [\n    { label: \"สาธารณะ\", value: \"normal\" },\n    { label: \"ส่วนตัว\", value: \"private\" },\n    { label: \"เฉพาะผู้ติดตาม\", value: \"followers\" },\n  ];\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    setFiles(arrayMove(files, oldIndex, newIndex));\n  };\n\n  const handlePrivacyChange = (event, value) => {\n    if (value) {\n      setPrivacy(value.value);\n    } else {\n      setPrivacy(\"normal\"); // Default to normal if no option is selected\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const selectedFiles = Array.from(e.target.files).slice(0, 6); // Limit to 6 files\n\n    // File size limits\n    const imageMaxSize = 5 * 1024 * 1024; // 5 MB in bytes\n    const videoMaxSize = 100 * 1024 * 1024; // 100 MB in bytes\n\n    // Validate file sizes\n    const validFiles = selectedFiles.filter((file) => {\n      if (file.type.startsWith(\"image/\") && file.size <= imageMaxSize) {\n        return true; // Valid image file\n      }\n      if (file.type.startsWith(\"video/\") && file.size <= videoMaxSize) {\n        return true; // Valid video file\n      }\n      return false; // Invalid file\n    });\n\n    setFiles(validFiles);\n  };\n\n  const removeFile = (index) => {\n    const updatedFiles = [...files];\n    updatedFiles.splice(index, 1);\n    setFiles(updatedFiles);\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n  \n    setLoading(true);\n  \n    const storageRef = storage.ref();\n    const filePromises = files.map((file) => {\n      const fileName = Date.now() + file.name;\n      const fileRef = storageRef.child(`${user.member_id}/${fileName}`);\n      return fileRef.put(file);\n    });\n  \n    const socket = io.connect(process.env.PATH_ID); // Fix the environment variable name\n  \n    try {\n      const uploadSnapshots = await Promise.all(filePromises);\n  \n      const fileUrls = await Promise.all(\n        uploadSnapshots.map((snapshot) => snapshot.ref.getDownloadURL())\n      );\n  \n      const newPost = {\n        title: typeData,\n        content: desc.current.value,\n        member_id: user.member_id,\n        likes: [],\n        tagpet: selectedTags.map((tag) => tag.nameType),\n        img: fileUrls,\n        comment: [],\n        status: privacy,\n      };\n  \n      const res = await axios.post(\"/api/posts\", newPost);\n      setFiles([]);\n      setTypeData(null);\n      setSelectedTags([]);\n      desc.current.value = \"\";\n      socket.emit(\"newPost\", res.data); // Emit the \"newPost\" event with data\n      if (onNewPost) {\n        onNewPost();\n      }\n    } catch (err) {\n      console.log(err);\n      // Handle error here and display appropriate message to the user\n    } finally {\n      setLoading(false);\n    }\n  };  \n\n  useEffect(() => {\n    const getTypePets = async () => {\n      try {\n        const res = await axios.get(\"/api/typePets\");\n        const data = res.data;\n        const typePets = data.map((item, index) => ({\n          id: index,\n          nameType: item.nameType,\n        }));\n        setTypePets(typePets);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getTypePets();\n  }, []);\n  \n  \n\n  const SortableItem = SortableElement(({ item, index }) => {\n    if (item.type === \"image\") {\n      setTypeData(\"image\");\n      return (\n        <div className=\"shareImgItem\">\n          <img src={item.url} alt=\"Gallery Image\" className=\"shareImg\" />\n          <Cancel\n            className=\"shareCancelImg\"\n            onClick={() => removeFile(index)}\n          />\n        </div>\n      );\n    } else if (item.type === \"video\") {\n      setTypeData(\"video\");\n      return (\n        <div className=\"shareVideoItem\">\n          <video src={item.url} className=\"shareVideo\" controls />\n          <Cancel\n            className=\"shareCancelImg\"\n            onClick={() => removeFile(index)}\n          />\n        </div>\n      );\n    } else {\n      return null; // Exclude unsupported file types\n    }\n  });\n\n  const SortableList = SortableContainer(({ items }) => (\n    <div className=\"shareImgContainer\">\n      {items.map((item, index) => (\n        <div key={index}>\n          {\" \"}\n          {/* Assign a unique key to each child element */}\n          <SortableItem item={item} index={index} />\n        </div>\n      ))}\n    </div>\n  ));\n\n  function arrayMove(array, oldIndex, newIndex) {\n    if (newIndex >= array.length) {\n      let k = newIndex - array.length + 1;\n      while (k--) {\n        array.push(undefined);\n      }\n    }\n    array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n    return array;\n  }\n\n  return (\n    <div className=\"share\">\n      <div className=\"shareWrapper\">\n        <div className=\"shareTop\">\n          <Grid container alignItems=\"center\">\n            <Grid item xs={6} sm={6} md={3}>\n              <Avatar\n                aria-label=\"recipe\"\n                src={user.profilePicture}\n                sx={{ width: \"39px\", height: \"39px\", mr: 1 }}\n              />\n              <Autocomplete\n                id=\"margin-none\"\n                autoFocus\n                disableCloseOnSelect\n                fullWidth\n                selectOnFocus\n                autoHighlight\n                options={privacyOptions}\n                defaultValue={privacyOptions[0]}\n                getOptionLabel={(option) => option.label}\n                onChange={handlePrivacyChange}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    variant=\"standard\"\n                    size=\"small\"\n                    sx={{ color: \"#6309DE\", m: 1}}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12} sm={12} md={12}>\n              <TextField\n                fullWidth\n                placeholder={`What's on your mind, ${user.firstName}?`}\n                className=\"shareInput\"\n                variant=\"standard\"\n                size=\"small\"\n                rows={3}\n                multiline\n                inputRef={desc}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} md={12}>\n              <form className=\"shareBottom\" onSubmit={submitHandler}>\n                {/* Share options */}\n                <div className=\"shareOptions\">\n                  <div className=\"shareOption\">\n                    <label htmlFor=\"file\" className=\"shareOptionLabel\">\n                      <PhotoCameraBackIcon />\n                      {/* <PermMedia htmlColor=\"tomato\" className=\"shareIcon\" /> */}\n                      <span className=\"shareOptionText\">Photo or Video</span>\n                      <input\n                        style={{ display: \"none\" }}\n                        type=\"file\"\n                        id=\"file\"\n                        accept=\".png,.jpeg,.jpg,.gif,.mp4,.mov\"\n                        multiple\n                        onChange={handleFileChange}\n                      />\n                    </label>\n                  </div>\n                </div>\n                {/* Share images */}\n                <div className=\"shareImg\">\n                  <SortableList\n                    items={files.map((file, index) => ({\n                      type: file.type.startsWith(\"image/\") ? \"image\" : \"video\",\n                      url: URL.createObjectURL(file),\n                    }))}\n                    onSortEnd={onSortEnd}\n                    axis=\"xy\"\n                    distance={1}\n                  />\n                </div>\n                {/* Share tags */}\n                <div className=\"shareTags\">\n                  <Autocomplete\n                    multiple\n                    sx={{ m: 1 }}\n                    id=\"type-pets-select\"\n                    options={typePets}\n                    // defaultValue={typePets[0]}\n                    getOptionLabel={(option) => option.nameType}\n                    onChange={(event, value) => setSelectedTags(value)}\n                    value={selectedTags}\n                    limitTags={MAX_TAGS_LIMIT} // Set the limit for the number of tags\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Type Pets\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                      />\n                    )}\n                  />\n                </div>\n                {/* Share button */}\n                <div className=\"shareBottomOptions\">\n                  <LoadingButton\n                    type=\"submit\"\n                    variant=\"contained\"\n                    sx={{ backgroundColor: \"#6309DE\" }}\n                    startIcon={<SendIcon />}\n                    className=\"shareButton\"\n                    disabled={loading}\n                    loading={loading}\n                  >\n                    Share\n                  </LoadingButton>\n                </div>\n              </form>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/watthananick/pet-story-project/client/src/components/modelEdit/ModalEdit.jsx",[],[],[],"/Users/watthananick/pet-story-project/client/src/components/search/Search.jsx",["154"],[],"//../search/Search\nimport axios from 'axios';\nimport Cookies from \"js-cookie\";\n\nexport const performSearch = async (value) => {\n  const token = Cookies.get(\"token\");\n  if (value.trim() !== '') {\n    try {\n      // Perform the search\n      console.log('Searching for:', value);\n      // Add your search logic here\n  \n      // Example: Make an API request\n      const response = await axios.post(`/api/search`, { searchTerm: value });\n      console.log(response.data);\n      const results = response.data.results;\n  \n      // Combine the search results with the type information and set appropriate labels\n      const searchResults = results.map((result) => {\n        if (result.type === 'User') {\n          return {\n            firstName: result?.firstName,\n            lastName: result?.lastName,\n            profilePicture: result?.profilePicture,\n            type: result?.type,\n          };\n        } else if (result.type === 'Post') {\n          // Choose either title or description as the label\n          const label = result?.title || result?.description || 'No Label';\n          return {\n            content: result?.content,\n            tagpet: result?.tagpet,\n            type: result?.type,\n            label: label, // Add the label property for rendering in Autocomplete\n          };\n        }\n        return null; // Return null for unrecognized types\n      }).filter(Boolean); // Remove any null values from the array\n  \n      return searchResults;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};",{"ruleId":"155","severity":1,"message":"156","line":33,"column":6,"nodeType":"157","endLine":33,"endColumn":17,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":1,"column":20,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"163","line":11,"column":8,"nodeType":"161","messageId":"162","endLine":11,"endColumn":24},{"ruleId":"159","severity":1,"message":"164","line":20,"column":8,"nodeType":"161","messageId":"162","endLine":20,"endColumn":12},{"ruleId":"159","severity":1,"message":"165","line":46,"column":10,"nodeType":"161","messageId":"162","endLine":46,"endColumn":22},{"ruleId":"159","severity":1,"message":"166","line":46,"column":24,"nodeType":"161","messageId":"162","endLine":46,"endColumn":39},{"ruleId":"159","severity":1,"message":"167","line":52,"column":9,"nodeType":"161","messageId":"162","endLine":52,"endColumn":32},{"ruleId":"159","severity":1,"message":"168","line":104,"column":9,"nodeType":"161","messageId":"162","endLine":104,"endColumn":26},{"ruleId":"159","severity":1,"message":"169","line":108,"column":9,"nodeType":"161","messageId":"162","endLine":108,"endColumn":29},{"ruleId":"159","severity":1,"message":"170","line":15,"column":8,"nodeType":"161","messageId":"162","endLine":15,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":96,"column":6,"nodeType":"157","endLine":96,"endColumn":44,"suggestions":"171"},{"ruleId":"159","severity":1,"message":"172","line":4,"column":3,"nodeType":"161","messageId":"162","endLine":4,"endColumn":9},{"ruleId":"159","severity":1,"message":"173","line":14,"column":8,"nodeType":"161","messageId":"162","endLine":14,"endColumn":20},{"ruleId":"159","severity":1,"message":"174","line":22,"column":3,"nodeType":"161","messageId":"162","endLine":22,"endColumn":10},{"ruleId":"159","severity":1,"message":"175","line":24,"column":3,"nodeType":"161","messageId":"162","endLine":24,"endColumn":7},{"ruleId":"159","severity":1,"message":"176","line":26,"column":3,"nodeType":"161","messageId":"162","endLine":26,"endColumn":19},{"ruleId":"159","severity":1,"message":"177","line":27,"column":3,"nodeType":"161","messageId":"162","endLine":27,"endColumn":7},{"ruleId":"159","severity":1,"message":"178","line":28,"column":3,"nodeType":"161","messageId":"162","endLine":28,"endColumn":11},{"ruleId":"159","severity":1,"message":"179","line":29,"column":3,"nodeType":"161","messageId":"162","endLine":29,"endColumn":15},{"ruleId":"159","severity":1,"message":"180","line":30,"column":3,"nodeType":"161","messageId":"162","endLine":30,"endColumn":17},{"ruleId":"159","severity":1,"message":"181","line":40,"column":10,"nodeType":"161","messageId":"162","endLine":40,"endColumn":24},{"ruleId":"155","severity":1,"message":"156","line":40,"column":6,"nodeType":"157","endLine":40,"endColumn":12,"suggestions":"182"},{"ruleId":"159","severity":1,"message":"183","line":9,"column":10,"nodeType":"161","messageId":"162","endLine":9,"endColumn":26},{"ruleId":"159","severity":1,"message":"184","line":9,"column":28,"nodeType":"161","messageId":"162","endLine":9,"endColumn":40},{"ruleId":"159","severity":1,"message":"185","line":9,"column":42,"nodeType":"161","messageId":"162","endLine":9,"endColumn":55},{"ruleId":"159","severity":1,"message":"186","line":23,"column":3,"nodeType":"161","messageId":"162","endLine":23,"endColumn":12},{"ruleId":"159","severity":1,"message":"187","line":33,"column":3,"nodeType":"161","messageId":"162","endLine":33,"endColumn":11},{"ruleId":"155","severity":1,"message":"188","line":137,"column":6,"nodeType":"157","endLine":137,"endColumn":45,"suggestions":"189"},{"ruleId":"155","severity":1,"message":"190","line":175,"column":6,"nodeType":"157","endLine":175,"endColumn":27,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":270,"column":11,"nodeType":"194","endLine":270,"endColumn":74},{"ruleId":"192","severity":1,"message":"193","line":280,"column":19,"nodeType":"194","endLine":280,"endColumn":77},{"ruleId":"159","severity":1,"message":"175","line":11,"column":3,"nodeType":"161","messageId":"162","endLine":11,"endColumn":7},{"ruleId":"159","severity":1,"message":"195","line":15,"column":3,"nodeType":"161","messageId":"162","endLine":15,"endColumn":13},{"ruleId":"159","severity":1,"message":"196","line":16,"column":3,"nodeType":"161","messageId":"162","endLine":16,"endColumn":14},{"ruleId":"159","severity":1,"message":"197","line":17,"column":3,"nodeType":"161","messageId":"162","endLine":17,"endColumn":13},{"ruleId":"159","severity":1,"message":"198","line":21,"column":3,"nodeType":"161","messageId":"162","endLine":21,"endColumn":12},{"ruleId":"192","severity":1,"message":"193","line":170,"column":11,"nodeType":"194","endLine":170,"endColumn":74},{"ruleId":"159","severity":1,"message":"199","line":6,"column":9,"nodeType":"161","messageId":"162","endLine":6,"endColumn":14},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["200"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'LockOutlinedIcon' is defined but never used.","'Card' is defined but never used.","'showPassword' is assigned a value but never used.","'setShowPassword' is assigned a value but never used.","'handleClickShowPassword' is assigned a value but never used.","'handleEmailChange' is assigned a value but never used.","'handlePasswordChange' is assigned a value but never used.","'Cookies' is defined but never used.",["201"],"'Person' is defined but never used.","'ReactLoading' is defined but never used.","'Divider' is defined but never used.","'Chip' is defined but never used.","'CircularProgress' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'InputAdornment' is defined but never used.","'searchResponse' is assigned a value but never used.",["202"],"'FacebookProvider' is defined but never used.","'EmbeddedPost' is defined but never used.","'EmbeddedVideo' is defined but never used.","'TextField' is defined but never used.","'MoreVert' is defined but never used.","React Hook useEffect has missing dependencies: 'handlePostUpdate', 'onPostUpdate', and 'token'. Either include them or remove the dependency array.",["203"],"React Hook useEffect has a missing dependency: 'currentUser.member_id'. Either include it or remove the dependency array.",["204"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'IconButton' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'PermMedia' is defined but never used.","'token' is assigned a value but never used.",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [firstName, token]",{"range":"215","text":"216"},"Update the dependencies array to be: [onProfile, firstName, user.member_id, token]",{"range":"217","text":"218"},"Update the dependencies array to be: [token, user]",{"range":"219","text":"220"},"Update the dependencies array to be: [post.member_id, post.id, showComments, handlePostUpdate, onPostUpdate, token]",{"range":"221","text":"222"},"Update the dependencies array to be: [currentUser.member_id, post.id, post.likes]",{"range":"223","text":"224"},[979,990],"[firstName, token]",[2895,2933],"[onProfile, firstName, user.member_id, token]",[1192,1198],"[token, user]",[4376,4415],"[post.member_id, post.id, showComments, handlePostUpdate, onPostUpdate, token]",[5566,5587],"[currentUser.member_id, post.id, post.likes]"]