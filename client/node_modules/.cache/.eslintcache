[{"/Users/watthananick/pet-story-project/client/src/index.js":"1","/Users/watthananick/pet-story-project/client/src/App.js":"2","/Users/watthananick/pet-story-project/client/src/context/AuthContext.js":"3","/Users/watthananick/pet-story-project/client/src/context/AuthReducer.js":"4","/Users/watthananick/pet-story-project/client/src/pages/login/Login.jsx":"5","/Users/watthananick/pet-story-project/client/src/pages/profile/Profile.jsx":"6","/Users/watthananick/pet-story-project/client/src/pages/typepet/TypePet.jsx":"7","/Users/watthananick/pet-story-project/client/src/pages/home/Home.jsx":"8","/Users/watthananick/pet-story-project/client/src/pages/register/Register.jsx":"9","/Users/watthananick/pet-story-project/client/src/apiCalls.js":"10","/Users/watthananick/pet-story-project/client/src/components/sidebar/Sidebar.jsx":"11","/Users/watthananick/pet-story-project/client/src/components/feed/Feed.jsx":"12","/Users/watthananick/pet-story-project/client/src/components/topbar/Topbar.jsx":"13","/Users/watthananick/pet-story-project/client/src/components/rightbar/Rightbar.jsx":"14","/Users/watthananick/pet-story-project/client/src/dummyData.js":"15","/Users/watthananick/pet-story-project/client/src/components/post/Post.jsx":"16","/Users/watthananick/pet-story-project/client/src/components/online/Online.jsx":"17","/Users/watthananick/pet-story-project/client/src/components/closeFriend/CloseFriend.jsx":"18","/Users/watthananick/pet-story-project/client/src/components/share/Share.jsx":"19"},{"size":313,"mtime":1617783295000,"results":"20","hashOfConfig":"21"},{"size":1060,"mtime":1684768149987,"results":"22","hashOfConfig":"21"},{"size":1080,"mtime":1684936330557,"results":"23","hashOfConfig":"21"},{"size":913,"mtime":1617783295000,"results":"24","hashOfConfig":"21"},{"size":3153,"mtime":1684936311264,"results":"25","hashOfConfig":"21"},{"size":2207,"mtime":1684938620660,"results":"26","hashOfConfig":"21"},{"size":2727,"mtime":1684938332250,"results":"27","hashOfConfig":"21"},{"size":426,"mtime":1617783295000,"results":"28","hashOfConfig":"21"},{"size":3340,"mtime":1684940287387,"results":"29","hashOfConfig":"21"},{"size":1085,"mtime":1684936731576,"results":"30","hashOfConfig":"21"},{"size":2286,"mtime":1683125741554,"results":"31","hashOfConfig":"21"},{"size":2179,"mtime":1684856144519,"results":"32","hashOfConfig":"21"},{"size":4736,"mtime":1684938181838,"results":"33","hashOfConfig":"21"},{"size":4302,"mtime":1684767355807,"results":"34","hashOfConfig":"21"},{"size":2525,"mtime":1684483667982,"results":"35","hashOfConfig":"21"},{"size":12856,"mtime":1684942544330,"results":"36","hashOfConfig":"21"},{"size":669,"mtime":1684747399781,"results":"37","hashOfConfig":"21"},{"size":468,"mtime":1684767554320,"results":"38","hashOfConfig":"21"},{"size":8747,"mtime":1684856113387,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"ldi8gy",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"43"},"/Users/watthananick/pet-story-project/client/src/index.js",[],[],[],"/Users/watthananick/pet-story-project/client/src/App.js",[],[],"/Users/watthananick/pet-story-project/client/src/context/AuthContext.js",[],[],"/Users/watthananick/pet-story-project/client/src/context/AuthReducer.js",[],[],"/Users/watthananick/pet-story-project/client/src/pages/login/Login.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/pages/profile/Profile.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/pages/typepet/TypePet.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/pages/home/Home.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/pages/register/Register.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/apiCalls.js",["100"],[],"import axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\n\nexport const loginCall = async (userCredential, dispatch) => {\n  dispatch({ type: \"LOGIN_START\" });\n\n  try {\n    const res = await axios.post(\"/api/auth/login\", userCredential);\n    const user = res?.data;\n    const data = user?.user.user.uid\n    \n    console.log('User=',data)\n    fetchUserData(data, dispatch)\n    // Dispatch LOGIN_SUCCESS action with the decoded user data\n    // dispatch({ type: \"LOGIN_SUCCESS\", payload: data.data });\n  } catch (err) {\n    // Dispatch LOGIN_FAILURE action with the error\n    dispatch({ type: \"LOGIN_FAILURE\", payload: err.response.data.error });\n  }\n};\n\n\n\nexport const fetchUserData = async (userId, dispatch) => {\n  try {\n    const res = await axios.get(`/api/users?member_id=${userId}&firstName=`);\n    const userData = res.data;\n    console.log('User=',userData)\n    // Dispatch action to update user data in the state\n    dispatch({ type: \"LOGIN_SUCCESS\", payload: userData });\n  } catch (err) {\n    // Handle error\n    console.error(\"Failed to fetch user data:\", err);\n  }\n};\n\n","/Users/watthananick/pet-story-project/client/src/components/sidebar/Sidebar.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/components/feed/Feed.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/components/topbar/Topbar.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/components/rightbar/Rightbar.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/dummyData.js",[],[],"/Users/watthananick/pet-story-project/client/src/components/post/Post.jsx",["101","102"],[],"/Users/watthananick/pet-story-project/client/src/components/online/Online.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/components/closeFriend/CloseFriend.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/components/share/Share.jsx",["103","104","105","106"],[],"import \"./share.css\";\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/storage';\nimport {\n  PermMedia,\n  Cancel,\n} from \"@material-ui/icons\";\nimport {\n  Avatar,\n  TextField,\n  Button,\n  Chip,\n} from \"@mui/material\";\nimport { useContext, useRef, useState, useEffect } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\nimport ReactLoading from 'react-loading';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst storage = firebase.storage();\n\nexport default function Share({ setPosts }) {\n  const { user } = useContext(AuthContext);\n  const desc = useRef();\n  const [typePets, setTypePets] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [error, setError] = useState(null);\n  const [typeData, setTypeData] = useState(null);\n  const [loading, setLoading] = useState(false); // New loading state\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    setFiles(arrayMove(files, oldIndex, newIndex));\n  };\n  \n  const handleFileChange = (e) => {\n    const selectedFiles = Array.from(e.target.files).slice(0, 6); // Limit to 6 files\n  \n    // File size limits\n    const imageMaxSize = 5 * 1024 * 1024; // 5 MB in bytes\n    const videoMaxSize = 100 * 1024 * 1024; // 100 MB in bytes\n  \n    // Validate file sizes\n    const validFiles = selectedFiles.filter((file) => {\n      if (file.type.startsWith('image/') && file.size <= imageMaxSize) {\n        return true; // Valid image file\n      }\n      if (file.type.startsWith('video/') && file.size <= videoMaxSize) {\n        return true; // Valid video file\n      }\n      return false; // Invalid file\n    });\n  \n    // Set files only once with the filtered validFiles array\n    setFiles(validFiles);\n    \n    // You can perform additional validations or checks on the validFiles array here\n    console.log('Valid files:', validFiles);\n  };\n\n  const removeFile = (index) => {\n    const updatedFiles = [...files];\n    updatedFiles.splice(index, 1);\n    setFiles(updatedFiles);\n  };\n  \n  const submitHandler = async (e) => {\n    e.preventDefault();\n    \n    setLoading(true); // Set loading state to true\n  \n    const storageRef = storage.ref();\n    const filePromises = files.map((file) => {\n      const fileName = Date.now() + file.name;\n      const fileRef = storageRef.child(`${user.member_id}/${fileName}`);\n      return fileRef.put(file);\n    });\n  \n    try {\n      const uploadSnapshots = await Promise.all(filePromises);\n  \n      const fileUrls = await Promise.all(\n        uploadSnapshots.map((snapshot) => snapshot.ref.getDownloadURL())\n      );\n  \n      const newPost = {\n        title: typeData,\n        content: desc.current.value,\n        member_id: user.member_id,\n        likes: [],\n        tagpet: selectedTags,\n        img: fileUrls,\n        comment: []\n      };\n  \n      await axios.post(\"/api/posts\", newPost);\n      setFiles([]); // Clear the files array\n      setTypeData(null); // Reset the typeData state\n      setSelectedTags([]); // Reset the selectedTags state\n      desc.current.value = \"\"; // Clear the input field\n  \n      // Reload the posts\n      const res = await axios.get(\"/api/posts/\" + user.member_id);\n      setPosts(\n        res.data.sort((p1, p2) => {\n          const date1 = new Date(\n            p1.createdAt.seconds * 1000 + p1.createdAt.nanoseconds / 1000000\n          );\n          const date2 = new Date(\n            p2.createdAt.seconds * 1000 + p2.createdAt.nanoseconds / 1000000\n          );\n          return date2.getTime() - date1.getTime();\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      setError(\n        \"Failed to upload files or create a new post. Please try again.\"\n      );\n    } finally {\n      setLoading(false); // Set loading state to false\n    }\n  };\n  \n  useEffect(() => {\n    const getTypePets = async () => {\n      try {\n        const res = await axios.get(\"/api/typePets\");\n        setTypePets(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getTypePets();\n  }, []);\n\n  const SortableItem = SortableElement(({ item, index }) => {\n  if (item.type === 'image') {\n    setTypeData('image');\n    return (\n      <div className=\"shareImgItem\">\n        <img src={item.url} alt=\"Gallery Image\" className=\"shareImg\" />\n        <Cancel className=\"shareCancelImg\" onClick={() => removeFile(index)} />\n      </div>\n    );\n  } else if (item.type === 'video') {\n    setTypeData('video');\n    return (\n      <div className=\"shareVideoItem\">\n        <video src={item.url} className=\"shareVideo\" controls />\n        <Cancel className=\"shareCancelImg\" onClick={() => removeFile(index)} />\n      </div>\n    );\n  } else {\n    return null; // Exclude unsupported file types\n  }\n});\n\nconsole.log(typeData);\n\nconst SortableList = SortableContainer(({ items }) => (\n  <div className=\"shareImgContainer\">\n    {items.map((item, index) => (\n      <div key={index}>\n        <SortableItem item={item} index={index} />\n        <p>{index}</p>\n      </div>\n    ))}\n  </div>\n));\n  \n  function arrayMove(array, oldIndex, newIndex) {\n    if (newIndex >= array.length) {\n      let k = newIndex - array.length + 1;\n      while (k--) {\n        array.push(undefined);\n      }\n    }\n    array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n    return array;\n  }\n  \n  const handleTagClick = (tag) => {\n    if (selectedTags.includes(tag)) {\n      setSelectedTags(selectedTags.filter((t) => t !== tag));\n    } else {\n      setSelectedTags([...selectedTags, tag]);\n    }\n  };\n  \n  console.log(selectedTags);\n  \n\n  return (\n    <div className=\"share\">\n      <div className=\"shareWrapper\">\n        <div className=\"shareTop\">\n          <Avatar\n            aria-label=\"recipe\"\n            src={user.profilePicture}\n            style={{ width: \"39px\", height: \"39px\" }}\n          ></Avatar>\n          <input\n            placeholder={\"What's in your mind \" + user.firstName + \"?\"}\n            className=\"shareInput\"\n            ref={desc}\n          />\n        </div>\n        <hr className=\"shareHr\" />\n        {files && files.length > 0 && (\n          <SortableList\n            items={files.map((file) => {\n              if (file.type.startsWith('image/')) {\n                return { type: 'image', url: URL.createObjectURL(file) };\n              } else if (file.type.startsWith('video/')) {\n                return { type: 'video', url: URL.createObjectURL(file) };\n              } else {\n                return null; // Exclude unsupported file types\n              }\n            }).filter((item) => item !== null)} // Filter out null items\n            onSortEnd={onSortEnd}\n            useDragHandle={true}\n            axis=\"xy\"\n          />\n        )}\n        <form className=\"shareBottom\" onSubmit={submitHandler}>\n          <div className=\"shareOptions\">\n            <label htmlFor=\"file\" className=\"shareOption\">\n              <PermMedia htmlColor=\"tomato\" className=\"shareIcon\" />\n              <span className=\"shareOptionText\">Photo or Video</span>\n              <input\n                style={{ display: \"none\" }}\n                type=\"file\"\n                id=\"file\"\n                accept=\".png,.jpeg,.jpg,.mp4\"\n                multiple\n                onChange={handleFileChange}\n              />\n            </label>\n            <div className=\"shareOption\">\n              {typePets && typePets.length > 0 && (\n              <div className=\"tagContainer\">\n                {typePets.map((typePet) => (\n                  <Chip\n                    key={typePet.id_TypePet}\n                    label={typePet.nameType}\n                    clickable\n                    color={selectedTags.includes(typePet.nameType) ? \"primary\" : \"default\"}\n                    onClick={() => handleTagClick(typePet.nameType)}\n                    className=\"topChip\"\n                  />\n                ))}\n              </div>\n            )}\n            </div>\n          </div>\n          \n          <button className=\"shareButton\" type=\"submit\" disabled={loading}>\n            {loading ? (\n             <>\n              <ReactLoading type=\"spin\" color=\"#6200E8\" height={20} width={20} />\n           </>) \n           : (\"Share\")}\n          </button>\n        </form>\n      </div>\n    </div>\n  );  \n}\n",{"ruleId":"107","severity":1,"message":"108","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":17},{"ruleId":"107","severity":1,"message":"111","line":21,"column":55,"nodeType":"109","messageId":"110","endLine":21,"endColumn":65},{"ruleId":"112","severity":1,"message":"113","line":204,"column":11,"nodeType":"114","endLine":204,"endColumn":74},{"ruleId":"107","severity":1,"message":"115","line":10,"column":3,"nodeType":"109","messageId":"110","endLine":10,"endColumn":12},{"ruleId":"107","severity":1,"message":"116","line":11,"column":3,"nodeType":"109","messageId":"110","endLine":11,"endColumn":9},{"ruleId":"107","severity":1,"message":"117","line":39,"column":10,"nodeType":"109","messageId":"110","endLine":39,"endColumn":15},{"ruleId":"112","severity":1,"message":"113","line":153,"column":9,"nodeType":"114","endLine":153,"endColumn":72},"no-unused-vars","'jwtDecode' is defined but never used.","Identifier","unusedVar","'ExpandMore' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'TextField' is defined but never used.","'Button' is defined but never used.","'error' is assigned a value but never used."]