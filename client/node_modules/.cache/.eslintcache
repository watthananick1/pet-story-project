[{"/Users/watthananick/pet-story-project/client/src/index.js":"1","/Users/watthananick/pet-story-project/client/src/App.js":"2","/Users/watthananick/pet-story-project/client/src/context/AuthContext.js":"3","/Users/watthananick/pet-story-project/client/src/context/AuthReducer.js":"4","/Users/watthananick/pet-story-project/client/src/pages/login/Login.jsx":"5","/Users/watthananick/pet-story-project/client/src/pages/profile/Profile.jsx":"6","/Users/watthananick/pet-story-project/client/src/pages/typepet/TypePet.jsx":"7","/Users/watthananick/pet-story-project/client/src/pages/home/Home.jsx":"8","/Users/watthananick/pet-story-project/client/src/pages/register/Register.jsx":"9","/Users/watthananick/pet-story-project/client/src/apiCalls.js":"10","/Users/watthananick/pet-story-project/client/src/components/sidebar/Sidebar.jsx":"11","/Users/watthananick/pet-story-project/client/src/components/feed/Feed.jsx":"12","/Users/watthananick/pet-story-project/client/src/components/topbar/Topbar.jsx":"13","/Users/watthananick/pet-story-project/client/src/components/rightbar/Rightbar.jsx":"14","/Users/watthananick/pet-story-project/client/src/dummyData.js":"15","/Users/watthananick/pet-story-project/client/src/components/post/Post.jsx":"16","/Users/watthananick/pet-story-project/client/src/components/online/Online.jsx":"17","/Users/watthananick/pet-story-project/client/src/components/closeFriend/CloseFriend.jsx":"18","/Users/watthananick/pet-story-project/client/src/components/share/Share.jsx":"19","/Users/watthananick/pet-story-project/client/src/components/modelEdit/ModalEdit.jsx":"20","/Users/watthananick/pet-story-project/client/src/components/search/Search.jsx":"21","/Users/watthananick/pet-story-project/client/src/components/dialogModel/dialogModel.jsx":"22","/Users/watthananick/pet-story-project/client/src/components/dialogModel/dialogModelCover.jsx":"23","/Users/watthananick/pet-story-project/client/src/context/AuthActions.js":"24","/Users/watthananick/pet-story-project/client/src/components/listItems/listItems.jsx":"25"},{"size":313,"mtime":1617783295000,"results":"26","hashOfConfig":"27"},{"size":1098,"mtime":1686466401160,"results":"28","hashOfConfig":"27"},{"size":2535,"mtime":1687510372965,"results":"29","hashOfConfig":"27"},{"size":1393,"mtime":1687431119050,"results":"30","hashOfConfig":"27"},{"size":6718,"mtime":1686570754325,"results":"31","hashOfConfig":"27"},{"size":9403,"mtime":1686995800687,"results":"32","hashOfConfig":"27"},{"size":3411,"mtime":1686008859944,"results":"33","hashOfConfig":"27"},{"size":426,"mtime":1617783295000,"results":"34","hashOfConfig":"27"},{"size":9976,"mtime":1685919688768,"results":"35","hashOfConfig":"27"},{"size":544,"mtime":1686461816113,"results":"36","hashOfConfig":"27"},{"size":2326,"mtime":1686573547784,"results":"37","hashOfConfig":"27"},{"size":3509,"mtime":1686574447413,"results":"38","hashOfConfig":"27"},{"size":15646,"mtime":1687627930073,"results":"39","hashOfConfig":"27"},{"size":4586,"mtime":1686573065823,"results":"40","hashOfConfig":"27"},{"size":2525,"mtime":1684483667982,"results":"41","hashOfConfig":"27"},{"size":20674,"mtime":1687625159616,"results":"42","hashOfConfig":"27"},{"size":669,"mtime":1686573967611,"results":"43","hashOfConfig":"27"},{"size":468,"mtime":1684767554320,"results":"44","hashOfConfig":"27"},{"size":10730,"mtime":1686991609062,"results":"45","hashOfConfig":"27"},{"size":8188,"mtime":1687625194224,"results":"46","hashOfConfig":"27"},{"size":1724,"mtime":1686801191901,"results":"47","hashOfConfig":"27"},{"size":6117,"mtime":1686994003996,"results":"48","hashOfConfig":"27"},{"size":6868,"mtime":1687087554609,"results":"49","hashOfConfig":"27"},{"size":532,"mtime":1686995219073,"results":"50","hashOfConfig":"27"},{"size":1803,"mtime":1687520475468,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"ldi8gy",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"55"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"55"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"55"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"55"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"55"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"55"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/watthananick/pet-story-project/client/src/index.js",[],[],[],"/Users/watthananick/pet-story-project/client/src/App.js",[],[],"/Users/watthananick/pet-story-project/client/src/context/AuthContext.js",[],[],"/Users/watthananick/pet-story-project/client/src/context/AuthReducer.js",[],[],"/Users/watthananick/pet-story-project/client/src/pages/login/Login.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/pages/profile/Profile.jsx",["136","137","138"],[],"import \"./profile.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport Feed from \"../../components/feed/Feed\";\nimport Rightbar from \"../../components/rightbar/Rightbar\";\nimport { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport ReactLoading from \"react-loading\";\nimport Cookies from \"js-cookie\";\nimport { Avatar, Badge, IconButton, Typography } from \"@mui/material\";\nimport LocalSeeIcon from \"@mui/icons-material/LocalSee\";\nimport { styled } from \"@mui/material/styles\";\nimport FormDialogImage from \"../../components/dialogModel/dialogModel\";\nimport FilePreviewerCover from \"../../components/dialogModel/dialogModelCover\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/storage\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\nconst firestore = firebase.firestore();\n\nexport default function Profile() {\n  const { user: currentUser, dispatch } = useContext(AuthContext);\n  const [user, setUser] = useState({});\n  const { firstName } = useParams();\n  const [open, setOpen] = useState(false);\n  const [openCover, setOpenCover] = useState(false);\n  const [isUser, setIsUser] = useState(false);\n  const token = Cookies.get(\"token\");\n  const dataUser = JSON.parse(localStorage.getItem(\"user\"));\n\n  useEffect(() => {\n    setIsUser(firstName === dataUser?.firstName);\n    // console.log(\"firstName\", firstName);\n    // console.log(\"UfirstName\", dataUser.firstName);\n  }, [firstName, dataUser]);\n\n  useEffect(() => {\n    // Create a query for the user document based on the member_id\n    const userRef = firestore\n      .collection(\"Users\")\n      .where(\"member_id\", \"==\", dataUser.member_id);\n  \n    // Subscribe to the snapshot listener for the user document\n    const unsubscribeUser = userRef.onSnapshot((userSnapshot) => {\n      // Check if the user document exists\n      if (!userSnapshot.empty) {\n        // Get the first document in the snapshot\n        const userDoc = userSnapshot.docs[0];\n        const userData = userDoc.data();\n  \n        // Update the user state with the new data\n        setUser((prevUser) => ({\n          ...prevUser,\n          profilePicture: userData.profilePicture,\n          coverPicture: userData.coverPicture,\n        }));\n  \n        // Update the user object in the localStorage\n        const updatedUser = {\n          ...dataUser,\n          profilePicture: userData.profilePicture,\n          coverPicture: userData.coverPicture,\n        };\n        dispatch({ type: \"UPDATE_USER\", payload: updatedUser });\n      } else {\n        // Handle the case when no user document matches the query\n        console.log(\"No matching user document found.\");\n      }\n    });\n  \n    // Cleanup function: unsubscribe from the snapshot listener\n    return () => {\n      unsubscribeUser();\n    };\n  }, [open]);\n  \n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const res = await axios.get(`/api/users/user/${firstName}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        setUser(res?.data[0]);\n        console.log(\"data\", res?.data[0]);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchUser();\n  }, [firstName]);\n\n  const Image = styled(\"div\")(({ theme }) => ({\n    position: \"relative\",\n    button: 150,\n    width: \"100%\",\n    height: 250,\n    backgroundImage: `url(\"${\n      user.coverPicture ? user.coverPicture : \"/assets/person/noCover.png\"\n    }\")`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    cursor: \"pointer\",\n    \"&:hover $ImageBackdrop\": {\n      opacity: 0,\n    },\n    \"&:hover $ImageMarked\": {\n      opacity: 0,\n    },\n    \"&:hover $ImageTitle\": {\n      border: \"4px solid currentColor\",\n    },\n  }));\n\n  const ImageTitle = styled(Typography)(({ theme }) => ({\n    position: \"relative\",\n    padding: theme.spacing(2),\n    fontWeight: \"bold\",\n    color: theme.palette.common.white,\n    backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n  }));\n\n  const ImageBackdrop = styled(\"div\")(({ theme }) => ({\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create(\"opacity\"),\n  }));\n\n  const ImageMarked = styled(\"span\")(({ theme }) => ({\n    height: 3,\n    width: 18,\n    backgroundColor: theme.palette.common.white,\n    position: \"absolute\",\n    bottom: -2,\n    left: \"calc(50% - 9px)\",\n    transition: theme.transitions.create(\"opacity\"),\n  }));\n\n  if (Object.keys(user).length === 0) {\n    return (\n      <div className=\"loadingWrapper\">\n        <ReactLoading\n          type=\"spin\"\n          color=\"#6200E8\"\n          height={\"10%\"}\n          width={\"10%\"}\n        />\n      </div>\n    );\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClickOpenCover = () => {\n    setOpenCover(true);\n  };\n\n  console.log(isUser);\n\n  return (\n    <>\n      <Topbar />\n      <div className=\"profile\">\n        <Sidebar />\n        <div className=\"profileRight\">\n          <div className=\"profileRightTop\">\n            <div className=\"profileCover\">\n              {isUser ? (\n                <>\n                  <Image onClick={handleClickOpenCover}>\n                    <ImageTitle>\n                      <LocalSeeIcon\n                        fontSize=\"small\"\n                        sx={{\n                          color: \"#6200E8\",\n                          m: 1,\n                        }}\n                      />\n                      <span>Change</span>\n                      <ImageMarked className=\"MuiImageMarked-root\" />\n                    </ImageTitle>\n                    <ImageBackdrop className=\"ImageBackdrop\" />\n                  </Image>\n                  <Badge\n                    overlap=\"circular\"\n                    sx={{\n                      top: \"-100px\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                    }}\n                    className=\"profileUserImg\"\n                    anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n                    badgeContent={\n                      <label htmlFor=\"avatar-upload\">\n                        <IconButton\n                          onClick={handleClickOpen}\n                          color=\"white\"\n                          aria-label=\"Change Avatar\"\n                          component=\"span\"\n                          sx={{\n                            backgroundColor: \"white\",\n                            border: \"0.5px solid #E2D7F0\",\n                            borderRadius: \"50%\",\n                          }}\n                        >\n                          <LocalSeeIcon\n                            fontSize=\"small\"\n                            sx={{\n                              color: \"#6200E8\",\n                            }}\n                          />\n                        </IconButton>\n                      </label>\n                    }\n                  >\n                    <Avatar\n                      alt=\"Profile Picture\"\n                      src={user.profilePicture || \"/assets/person/noAvatar.png\"}\n                      style={{ width: \"150px\", height: \"150px\" }}\n                    />\n                  </Badge>\n                </>\n              ) : (\n                <>\n                  <img\n                    className=\"profileCoverImg\"\n                    src={\n                      user.coverPicture\n                        ? user.coverPicture\n                        : \"/assets/person/noCover.png\"\n                    }\n                    alt=\"\"\n                  />\n                  <Avatar\n                    className=\"profileUserImg\"\n                    alt=\"Profile Picture\"\n                    src={user.profilePicture || \"/assets/person/noAvatar.png\"}\n                    style={{ width: \"150px\", height: \"150px\" }}\n                  />\n                </>\n              )}\n            </div>\n            <div className=\"profileInfo\">\n              <h4 className=\"profileInfoName\">\n                {user.firstName} {user.lastName}\n              </h4>\n              <span className=\"profileInfoDesc\">{user?.desc}</span>\n            </div>\n          </div>\n          <div className=\"profileRightBottom\">\n            <Feed firstName={firstName} onProfile={true} />\n            <Rightbar user={user} />\n          </div>\n          {open ? (\n            <>\n              <FormDialogImage onClose={() => setOpen(false)} />\n            </>\n          ) : null}\n          {openCover ? (\n            <>\n              <FilePreviewerCover onClose={() => setOpenCover(false)} />\n            </>\n          ) : null}\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/watthananick/pet-story-project/client/src/pages/typepet/TypePet.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/pages/home/Home.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/pages/register/Register.jsx",["139","140","141","142","143","144","145","146"],[],"import { useState, useRef } from \"react\";\nimport \"./register.css\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useHistory } from \"react-router\";\nimport axios from \"axios\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Card from \"@mui/material/Card\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"\">\n        Pet story\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nfunction Register() {\n  const history = useHistory();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(\"\");\n  const [dateOfBirth, setDateOfBirth] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [ConfirmVisible, setConfirmVisible] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  const handleClickShowConfirm = () => {\n    setConfirmVisible(!ConfirmVisible);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (confirmPassword.current.value !== password) {\n      confirmPassword.current.setCustomValidity(\"Passwords don't match!\");\n    } else {\n      const user = {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password,\n        dateOfBirth: dateOfBirth,\n        status: \"active\",\n        followers: [],\n        followings: [],\n        statusUser: \"USER\",\n        typePets: [],\n        profilePicture: \"\",\n        coverPicture: \"\",\n      };\n      try {\n        const res = await axios.post(\"/api/auth/register\", user);\n        if (res.status === 200) {\n          localStorage.setItem(\"Uid\", res.data.member_id);\n          history.push({\n            pathname: \"/typepet\",\n            state: res.data.member_id, // pass the user object as a prop\n          }); // redirect to the TypePet page\n        } else {\n          console.log(\"Registration failed. Status:\", res.status);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  const handleFirstNameChange = (event) => {\n    setFirstName(event.target.value);\n  };\n\n  const handleLastNameChange = (event) => {\n    setLastName(event.target.value);\n  };\n\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleDateOfBirthChange = (event) => {\n    setDateOfBirth(event.target.value);\n  };\n\n  const handleConfirmPasswordChange = (event) => {\n    setConfirmPassword(event.target.value);\n  };\n\n  const theme = createTheme();\n\n  return (\n    <div className=\"login\">\n      <div className=\"loginWrapper\">\n        <ThemeProvider theme={theme}>\n          <Grid container component=\"main\">\n            <CssBaseline />\n            <Grid\n              item\n              xs={false}\n              sm={4}\n              md={7}\n              sx={{\n                backgroundImage:\n                  \"url(https://firebasestorage.googleapis.com/v0/b/pet-story-f51e3.appspot.com/o/mainData%2FloginImage1.jpg?alt=media&token=4547e22e-e032-4eb9-82fa-84551789d27e)\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundColor: (t) =>\n                  t.palette.mode === \"light\"\n                    ? t.palette.grey[50]\n                    : t.palette.grey[900],\n                backgroundSize: \"cover\",\n                backgroundPosition: \"center\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            />\n            <Grid\n              item\n              xs={12}\n              sm={8}\n              md={5}\n              component={Paper}\n              elevation={6}\n              square\n            >\n              <Box\n                sx={{\n                  my: 8,\n                  mx: 4,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                  Register\n                </Typography>\n                <Box\n                  component=\"form\"\n                  noValidate\n                  onSubmit={handleSubmit}\n                  sx={{ mt: 2 }}\n                >\n                  <TextField\n                    sx={{ mb: 2 }}\n                    autoComplete=\"fname\"\n                    name=\"firstName\"\n                    required\n                    fullWidth\n                    id=\"firstName\"\n                    label=\"First Name\"\n                    autoFocus\n                    value={firstName}\n                    onChange={handleFirstNameChange}\n                  />\n                  <TextField\n                    sx={{ mb: 2 }}\n                    required\n                    fullWidth\n                    id=\"lastName\"\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    autoComplete=\"lname\"\n                    value={lastName}\n                    onChange={handleLastNameChange}\n                  />\n                  <TextField\n                    sx={{ mb: 2 }}\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                  />\n                  <TextField\n                    sx={{ mb: 2 }}\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type={passwordVisible ? \"text\" : \"password\"}\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={() => setPasswordVisible(!passwordVisible)}\n                            edge=\"end\"\n                          >\n                            {passwordVisible ? (\n                              <VisibilityOff />\n                            ) : (\n                              <Visibility />\n                            )}\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                  <TextField\n                    sx={{ mb: 2 }}\n                    required\n                    fullWidth\n                    id=\"confirmPassword\"\n                    label=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    type={ConfirmVisible ? \"text\" : \"password\"}\n                    autoComplete=\"new-password\"\n                    value={confirmPassword}\n                    onChange={handleConfirmPasswordChange}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"toggle password visibility\"\n                            onClick={handleClickShowConfirm}\n                            edge=\"end\"\n                          >\n                            {ConfirmVisible ? (\n                              <VisibilityOff />\n                            ) : (\n                              <Visibility />\n                            )}\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"dateOfBirth\"\n                    label=\"Date of Birth\"\n                    type=\"date\"\n                    name=\"dateOfBirth\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    value={dateOfBirth}\n                    onChange={handleDateOfBirthChange}\n                  />\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                  >\n                    Sign In\n                  </Button>\n                  <Grid container justifyContent=\"flex-end\">\n                    <Grid item>\n                      <Link href=\"/login\" variant=\"body2\">\n                        Already have an account? Sign in\n                      </Link>\n                    </Grid>\n                  </Grid>\n                  <Copyright sx={{ mt: 5 }} />\n                </Box>\n              </Box>\n            </Grid>\n          </Grid>\n        </ThemeProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default Register;\n","/Users/watthananick/pet-story-project/client/src/apiCalls.js",[],[],"/Users/watthananick/pet-story-project/client/src/components/sidebar/Sidebar.jsx",["147"],[],"import \"./sidebar.css\";\nimport {\n  RssFeed,\n  Chat,\n  PlayCircleFilledOutlined,\n  Group,\n  Bookmark,\n  HelpOutline,\n  WorkOutline,\n  Event,\n  School,\n} from \"@material-ui/icons\";\nimport { Users } from \"../../dummyData\";\nimport CloseFriend from \"../closeFriend/CloseFriend\";\nimport Cookies from \"js-cookie\";\n\nexport default function Sidebar() {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebarWrapper\">\n        <ul className=\"sidebarList\">\n          <li className=\"sidebarListItem\">\n            <RssFeed className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Feed</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <Chat className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Chats</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <PlayCircleFilledOutlined className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Videos</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <Group className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Groups</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <Bookmark className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Bookmarks</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <HelpOutline className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Questions</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <WorkOutline className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Jobs</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <Event className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Events</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <School className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Courses</span>\n          </li>\n        </ul>\n        <button className=\"sidebarButton\">Show More</button>\n        <hr className=\"sidebarHr\" />\n        <ul className=\"sidebarFriendList\">\n          {Users.map((user, index) => (\n            <CloseFriend key={index} user={user} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","/Users/watthananick/pet-story-project/client/src/components/feed/Feed.jsx",["148"],[],"import { useContext, useEffect, useState } from \"react\";\nimport Post from \"../post/Post\";\nimport Share from \"../share/Share\";\nimport \"./feed.css\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport ReactLoading from \"react-loading\";\nimport io from \"socket.io-client\";\nimport Cookies from \"js-cookie\";\n\nexport default function Feed({ firstName, onProfile }) {\n  const [posts, setPosts] = useState([]);\n  const { user } = useContext(AuthContext);\n  const [loading, setLoading] = useState(true);\n  const token = Cookies.get(\"token\");\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    const socket = io.connect(process.env.PATH_ID); // Fix the environment variable name\n    const fetchPosts = async () => {\n      try {\n        const currentTime = new Date().getTime();\n        setLoading(true);\n        const res = await axios.get(`/api/posts/${user.member_id}/date`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n          cancelToken: source.token,\n        });\n        const sortedPosts = res.data.sort((a, b) => {\n          const timeDiffA = Math.abs(\n            currentTime - new Date(a.createdAt.seconds * 1000).getTime()\n          );\n          const timeDiffB = Math.abs(\n            currentTime - new Date(b.createdAt.seconds * 1000).getTime()\n          );\n          return timeDiffA - timeDiffB;\n        });\n        setPosts(sortedPosts);\n      } catch (err) {\n        if (axios.isCancel(err)) {\n          console.log(\"Request canceled:\", err.message);\n        } else {\n          console.log(err);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const fetchUserPosts = async () => {\n      try {\n        const currentTime = new Date().getTime();\n\n        setLoading(true);\n        const res = await axios.get(`/api/posts/user/${firstName}/date`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        const sortedPosts = res.data.sort((a, b) => {\n          const timeDiffA = Math.abs(\n            currentTime - new Date(a.createdAt.seconds * 1000).getTime()\n          );\n          const timeDiffB = Math.abs(\n            currentTime - new Date(b.createdAt.seconds * 1000).getTime()\n          );\n          return timeDiffA - timeDiffB;\n        });\n        setPosts(sortedPosts);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const handleNewPost = (newPost) => {\n      setPosts((prevPosts) => [newPost, ...prevPosts]);\n    };\n\n    if (onProfile) {\n      fetchUserPosts();\n    } else {\n      fetchPosts();\n    }\n\n    socket.on(\"newPost\", handleNewPost);\n\n    return () => {\n      source.cancel(\"Component unmounted\");\n      console.log(\"Component unmounted\", source);\n      socket.off(\"newPost\", handleNewPost);\n      socket.disconnect();\n    };\n  }, [onProfile, firstName, user.member_id]);\n\n  return (\n    <div className=\"feed\">\n      <div className=\"feedWrapper\">\n        {!firstName || firstName === user?.firstName ? <Share /> : null}\n        {loading ? (\n          <div className=\"loadingWrapper\">\n            <ReactLoading\n              type=\"spin\"\n              color=\"#6200E8\"\n              height={\"10%\"}\n              width={\"10%\"}\n            />\n          </div>\n        ) : (\n          <>\n            {posts.map((p, i) => (\n              <Post key={i} isPost={p} indexPost={i} />\n            ))}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/watthananick/pet-story-project/client/src/components/topbar/Topbar.jsx",["149","150","151","152","153","154","155","156","157","158","159"],[],"/Users/watthananick/pet-story-project/client/src/components/rightbar/Rightbar.jsx",["160"],[],"import \"./rightbar.css\";\nimport { Users } from \"../../dummyData\";\nimport Online from \"../online/Online\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { Add, Remove } from \"@material-ui/icons\";\nimport Cookies from \"js-cookie\";\n\nimport {\n  Avatar,\n} from \"@mui/material\";\n\nexport default function Rightbar({ user }) {\n  // const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const [friends, setFriends] = useState([]);\n  const { user: currentUser, dispatch } = useContext(AuthContext);\n  const [followed, setFollowed] = useState(\n    currentUser.followers.includes(user?.member_id)\n  );\n  const token = Cookies.get(\"token\");\n  \n  //++++++++++++++++++ fetch Data +++++++++++++++++++\n\n  useEffect(() => {\n    const getFriends = async () => {\n      try {\n        const friendList = await axios.get(`/api/users/friends/${user.member_id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        setFriends(friendList.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getFriends();\n  }, [user]);\n  \n  //++++++++++ on Click Button +++++++++++\n\n  const handleClick = async () => {\n    try {\n      if (followed) {\n        await axios.put(`/api/users/${user?.member_id}/unfollow`, {\n          member_id: currentUser?.member_id,\n        });\n        dispatch({ type: \"UNFOLLOW\", payload: user?.member_id });\n      } else {\n        await axios.put(`/api/users/${user?.member_id}/follow`, {\n          member_id: currentUser?.member_id,\n        });\n        dispatch({ type: \"FOLLOW\", payload: user?.member_id });\n      }\n      setFollowed(!followed);\n    } catch (err) {\n    }\n  };\n\n  const HomeRightbar = () => {\n    return (\n      <>\n        <div className=\"birthdayContainer\">\n          <img className=\"birthdayImg\" src=\"assets/gift.png\" alt=\"\" />\n          <span className=\"birthdayText\">\n            <b>Pola Foster</b> and <b>3 other friends</b> have a birhday today.\n          </span>\n        </div>\n        <img className=\"rightbarAd\" src=\"assets/ad.png\" alt=\"\" />\n        <h4 className=\"rightbarTitle\">Online Friends</h4>\n        <ul className=\"rightbarFriendList\">\n          {Users.map((u, index) => (\n            <Online key={index} user={u} />\n          ))}\n        </ul>\n      </>\n    );\n  };\n\n  const ProfileRightbar = () => {\n    return (\n      <>\n        {user?.firstName !== currentUser?.firstName && (\n          <button className=\"rightbarFollowButton\" onClick={handleClick}>\n            {followed ? \"Unfollow\" : \"Follow\"}\n            {followed ? <Remove /> : <Add />}\n          </button>\n        )}\n        <h4 className=\"rightbarTitle\">User information</h4>\n        <div className=\"rightbarInfo\">\n          <div className=\"rightbarInfoItem\">\n            <span className=\"rightbarInfoKey\">City:</span>\n            <span className=\"rightbarInfoValue\">{user.city ? user?.city : \"-\"}</span>\n          </div>\n          <div className=\"rightbarInfoItem\">\n            <span className=\"rightbarInfoKey\">From:</span>\n            <span className=\"rightbarInfoValue\">{user.from ? user?.from : \"-\"}</span>\n          </div>\n          <div className=\"rightbarInfoItem\">\n            <span className=\"rightbarInfoKey\">Relationship:</span>\n            <span className=\"rightbarInfoValue\">\n              {user?.relationship === 1\n                ? \"Single\"\n                : user?.relationship === 1\n                ? \"Married\"\n                : \"-\"}\n            </span>\n          </div>\n        </div>\n        <h4 className=\"rightbarTitle\">User friends</h4>\n        <div className=\"rightbarFollowings\">\n          {friends.map((friend) => (\n            <Link\n              to={\"/profile/\" + friend?.firstName}\n              style={{ textDecoration: \"none\" }}\n            >\n              <div className=\"rightbarFollowing\">\n                <Avatar\n                  className=\"rightbarFollowingImg\"\n                  aria-label=\"recipe\"\n                  src={friend.profilePicture ? friend?.profilePicture : \"/assets/person/noAvatar.png\"}\n                  style={{ width: \"39px\", height: \"39px\" }}\n                ></Avatar>\n                <span className=\"rightbarFollowingName\">{friend?.firstName} {friend?.lastName}</span>\n              </div>\n            </Link>\n          ))}\n        </div>\n      </>\n    );\n  };\n  return (\n    <div className=\"rightbar\">\n      <div className=\"rightbarWrapper\">\n        {user ? <ProfileRightbar /> : <HomeRightbar />}\n      </div>\n    </div>\n  );\n}\n","/Users/watthananick/pet-story-project/client/src/dummyData.js",[],[],"/Users/watthananick/pet-story-project/client/src/components/post/Post.jsx",["161","162","163","164","165","166"],[],"/Users/watthananick/pet-story-project/client/src/components/online/Online.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/components/closeFriend/CloseFriend.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/components/share/Share.jsx",["167","168","169","170","171","172"],[],"import \"./share.css\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/storage\";\nimport React, { useContext, useRef, useState, useEffect } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\nimport Cookies from \"js-cookie\";\n\nimport {\n  Avatar,\n  Chip,\n  Autocomplete,\n  TextField,\n  Grid,\n  IconButton,\n  FormControl,\n  InputLabel,\n} from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport {\n  PermMedia,\n  Cancel,\n  Send as SendIcon,\n  PhotoCameraBack as PhotoCameraBackIcon,\n} from \"@mui/icons-material\";\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst storage = firebase.storage();\n\nexport default function Share({ onNewPost }) {\n  const { user } = useContext(AuthContext);\n  const desc = useRef();\n  const [typePets, setTypePets] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [typeData, setTypeData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [privacy, setPrivacy] = useState(\"normal\");\n  const MAX_TAGS_LIMIT = 3;\n  const token = Cookies.get(\"token\");\n\n  const privacyOptions = [\n    { label: \"สาธารณะ\", value: \"normal\" },\n    { label: \"ส่วนตัว\", value: \"private\" },\n    { label: \"เฉพาะผู้ติดตาม\", value: \"followers\" },\n  ];\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    setFiles(arrayMove(files, oldIndex, newIndex));\n  };\n\n  const handlePrivacyChange = (event, value) => {\n    if (value) {\n      setPrivacy(value.value);\n    } else {\n      setPrivacy(\"normal\"); // Default to normal if no option is selected\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const selectedFiles = Array.from(e.target.files).slice(0, 6); // Limit to 6 files\n\n    // File size limits\n    const imageMaxSize = 5 * 1024 * 1024; // 5 MB in bytes\n    const videoMaxSize = 100 * 1024 * 1024; // 100 MB in bytes\n\n    // Validate file sizes\n    const validFiles = selectedFiles.filter((file) => {\n      if (file.type.startsWith(\"image/\") && file.size <= imageMaxSize) {\n        return true; // Valid image file\n      }\n      if (file.type.startsWith(\"video/\") && file.size <= videoMaxSize) {\n        return true; // Valid video file\n      }\n      return false; // Invalid file\n    });\n\n    setFiles(validFiles);\n  };\n\n  const removeFile = (index) => {\n    const updatedFiles = [...files];\n    updatedFiles.splice(index, 1);\n    setFiles(updatedFiles);\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n\n    const storageRef = storage.ref();\n    const filePromises = files.map((file) => {\n      const fileName = Date.now() + file.name;\n      const fileRef = storageRef.child(`${user.member_id}/${fileName}`);\n      return fileRef.put(file);\n    });\n\n    const socket = io.connect(process.env.PATH_ID); // Fix the environment variable name\n\n    try {\n      const uploadSnapshots = await Promise.all(filePromises);\n\n      const fileUrls = await Promise.all(\n        uploadSnapshots.map((snapshot) => snapshot.ref.getDownloadURL())\n      );\n\n      const newPost = {\n        title: typeData,\n        content: desc.current.value,\n        member_id: user.member_id,\n        likes: [],\n        tagpet: selectedTags.map((tag) => tag.nameType),\n        img: fileUrls,\n        comment: [],\n        status: privacy,\n      };\n\n      const res = await axios.post(`/api/posts`, newPost, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setFiles([]);\n      setTypeData(null);\n      setSelectedTags([]);\n      desc.current.value = \"\";\n      socket.emit(\"newPost\", res.data); // Emit the \"newPost\" event with data\n      if (onNewPost) {\n        onNewPost();\n      }\n    } catch (err) {\n      console.log(err);\n      // Handle error here and display appropriate message to the user\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const getTypePets = async () => {\n      try {\n        const res = await axios.get(\"/api/typePets\");\n        const data = res.data;\n        const typePets = data.map((item, index) => ({\n          id: index,\n          nameType: item.nameType,\n        }));\n        setTypePets(typePets);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getTypePets();\n  }, []);\n\n  const SortableItem = SortableElement(({ item, index }) => {\n    if (item.type === \"image\") {\n      setTypeData(\"image\");\n      return (\n        <div className=\"shareImgItem\">\n          <img src={item.url} alt=\"Gallery Image\" className=\"shareImg\" />\n          <Cancel\n            className=\"shareCancelImg\"\n            onClick={() => removeFile(index)}\n          />\n        </div>\n      );\n    } else if (item.type === \"video\") {\n      setTypeData(\"video\");\n      return (\n        <div className=\"shareVideoItem\">\n          <video src={item.url} className=\"shareVideo\" controls />\n          <Cancel\n            className=\"shareCancelImg\"\n            onClick={() => removeFile(index)}\n          />\n        </div>\n      );\n    } else {\n      return null; // Exclude unsupported file types\n    }\n  });\n\n  const SortableList = SortableContainer(({ items }) => (\n    <div className=\"shareImgContainer\">\n      {items.map((item, index) => (\n        <div key={index}>\n          {\" \"}\n          {/* Assign a unique key to each child element */}\n          <SortableItem item={item} index={index} />\n        </div>\n      ))}\n    </div>\n  ));\n\n  function arrayMove(array, oldIndex, newIndex) {\n    if (newIndex >= array.length) {\n      let k = newIndex - array.length + 1;\n      while (k--) {\n        array.push(undefined);\n      }\n    }\n    array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n    return array;\n  }\n\n  return (\n    <div className=\"share\">\n      <div className=\"shareWrapper\">\n        <div className=\"shareTop\">\n          <Grid container alignItems=\"center\">\n            <Grid item xs={6} sm={6} md={3}>\n              <Avatar\n                aria-label=\"recipe\"\n                src={user.profilePicture}\n                sx={{ width: \"39px\", height: \"39px\", mr: 1 }}\n              />\n              <Autocomplete\n                id=\"margin-none\"\n                autoFocus\n                disableCloseOnSelect\n                fullWidth\n                selectOnFocus\n                autoHighlight\n                options={privacyOptions}\n                defaultValue={privacyOptions[0]}\n                getOptionLabel={(option) => option.label}\n                onChange={handlePrivacyChange}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    variant=\"standard\"\n                    size=\"small\"\n                    sx={{ color: \"#6309DE\", m: 1 }}\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={12} sm={12} md={12}>\n              <TextField\n                fullWidth\n                placeholder={`What's on your mind, ${user.firstName}?`}\n                className=\"shareInput\"\n                variant=\"standard\"\n                size=\"small\"\n                rows={3}\n                multiline\n                inputRef={desc}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6} md={12}>\n              <form className=\"shareBottom\" onSubmit={submitHandler}>\n                {/* Share options */}\n                <div className=\"shareOptions\">\n                  <div className=\"shareOption\">\n                    <label htmlFor=\"file\" className=\"shareOptionLabel\">\n                      <PhotoCameraBackIcon />\n                      {/* <PermMedia htmlColor=\"tomato\" className=\"shareIcon\" /> */}\n                      <span className=\"shareOptionText\">Photo or Video</span>\n                      <input\n                        style={{ display: \"none\" }}\n                        type=\"file\"\n                        id=\"file\"\n                        accept=\".png,.jpeg,.jpg,.gif,.mp4,.mov\"\n                        multiple\n                        onChange={handleFileChange}\n                      />\n                    </label>\n                  </div>\n                </div>\n                {/* Share images */}\n                <div className=\"shareImg\">\n                  <SortableList\n                    items={files.map((file, index) => ({\n                      type: file.type.startsWith(\"image/\") ? \"image\" : \"video\",\n                      url: URL.createObjectURL(file),\n                    }))}\n                    onSortEnd={onSortEnd}\n                    axis=\"xy\"\n                    distance={1}\n                  />\n                </div>\n                {/* Share tags */}\n                <div className=\"shareTags\">\n                  <Autocomplete\n                    multiple\n                    sx={{ m: 1 }}\n                    id=\"type-pets-select\"\n                    options={typePets}\n                    // defaultValue={typePets[0]}\n                    getOptionLabel={(option) => option.nameType}\n                    onChange={(event, value) => setSelectedTags(value)}\n                    value={selectedTags}\n                    limitTags={MAX_TAGS_LIMIT} // Set the limit for the number of tags\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Type Pets\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                      />\n                    )}\n                  />\n                </div>\n                {/* Share button */}\n                <div className=\"shareBottomOptions\">\n                  <LoadingButton\n                    type=\"submit\"\n                    variant=\"contained\"\n                    sx={{ backgroundColor: \"#6309DE\" }}\n                    startIcon={<SendIcon />}\n                    className=\"shareButton\"\n                    disabled={loading}\n                    loading={loading}\n                  >\n                    Share\n                  </LoadingButton>\n                </div>\n              </form>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/watthananick/pet-story-project/client/src/components/modelEdit/ModalEdit.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/components/search/Search.jsx",[],[],"/Users/watthananick/pet-story-project/client/src/components/dialogModel/dialogModel.jsx",["173","174"],[],"import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Stack,\n} from \"@mui/material\";\nimport AddAPhotoIcon from \"@mui/icons-material/AddAPhoto\";\nimport { Send as SendIcon } from \"@mui/icons-material\";\nimport { ReactCrop } from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/storage\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nconst storage = firebase.storage();\nconst firestore = firebase.firestore();\n\nexport default function FilePreviewer({ onClose }) {\n  const [imagePreview, setImagePreview] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [crop, setCrop] = useState({\n    unit: \"%\",\n    x: 25,\n    y: 25,\n    width: 50,\n    height: 50,\n  });\n\n  const cropperRef = useRef(null);\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  useEffect(() => {\n    return () => {\n      if (cropperRef.current) {\n        cropperRef.current.destroy();\n      }\n    };\n  }, []);\n\n  const handleCropChange = (newCrop) => {\n    setCrop(newCrop);\n  };\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleCancel = () => {\n    setImagePreview(null);\n    handleClose();\n  };\n\n  const previewFile = (e) => {\n    const reader = new FileReader();\n    const selectedFile = e.target.files[0];\n\n    if (selectedFile) {\n      reader.readAsDataURL(selectedFile);\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n      };\n    }\n  };\n\n  const getCroppedImageBlob = async (sourceImageUrl, crop) => {\n    const image = new Image();\n    image.src = sourceImageUrl;\n\n    return new Promise((resolve) => {\n      image.onload = () => {\n        const canvas = document.createElement(\"canvas\");\n        const scaleX = image.naturalWidth / image.width;\n        const scaleY = image.naturalHeight / image.height;\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n        const ctx = canvas.getContext(\"2d\");\n\n        const pixelRatio = window.devicePixelRatio;\n        canvas.width = crop.width * pixelRatio;\n        canvas.height = crop.height * pixelRatio;\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        ctx.imageSmoothingQuality = \"high\";\n\n        ctx.drawImage(\n          image,\n          crop.x * scaleX,\n          crop.y * scaleY,\n          crop.width * scaleX,\n          crop.height * scaleY,\n          0,\n          0,\n          crop.width,\n          crop.height\n        );\n\n        canvas.toBlob((blob) => {\n          resolve(URL.createObjectURL(blob)); // Convert the blob to a URL\n        }, \"image/jpeg\");\n      };\n    });\n  };\n\n  const handleAvatarUpload = async () => {\n    setLoading(true);\n\n    try {\n      const storageRef = storage.ref();\n      const fileName = `${Date.now()}_profile`;\n      const fileRef = storageRef.child(\n        `${user.member_id}/profilePicture/${fileName}`\n      );\n\n      if (!imagePreview) {\n        throw new Error(\"No image selected\");\n      }\n\n      const croppedImage = await getCroppedImageBlob(imagePreview, crop);\n\n      if (!croppedImage) {\n        throw new Error(\"Error cropping image\");\n      }\n\n      const response = await fetch(croppedImage);\n      const blob = await response.blob();\n\n      const file = new File([blob], fileName, { type: blob.type });\n\n      const uploadTaskSnapshot = await fileRef.put(file);\n\n      const downloadUrl = await uploadTaskSnapshot.ref.getDownloadURL();\n\n      await firestore.collection(\"Users\").doc(user.member_id).update({\n        profilePicture: downloadUrl,\n      });\n\n      console.log(\"Profile picture updated successfully:\", downloadUrl);\n\n      onClose();\n    } catch (error) {\n      console.log(\"Error uploading profile picture:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <Dialog open={true} onClose={handleClose}>\n        <DialogTitle>Update Profile Picture</DialogTitle>\n        <DialogContent>\n          <Stack spacing={2}>\n            <Stack\n              direction=\"row\"\n              spacing={2}\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              mt={2}\n            >\n              <input\n                accept=\"image/png, image/jpeg, image/jpg\"\n                onChange={previewFile}\n                ref={cropperRef}\n                type=\"file\"\n                hidden\n              />\n\n              <Button\n                variant=\"outlined\"\n                className=\"btn\"\n                startIcon={<AddAPhotoIcon />}\n                onClick={() => cropperRef.current.click()}\n              >\n                Choose\n              </Button>\n            </Stack>\n            <Stack direction=\"row\" spacing={2} alignItems=\"center\" mt={2}>\n              {imagePreview && (\n                <ReactCrop\n                  crop={crop}\n                  onChange={handleCropChange}\n                >\n                  <>\n                    <img src={imagePreview} />\n                  </>\n                </ReactCrop>\n              )}\n            </Stack>\n          </Stack>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel}>Cancel</Button>\n          <LoadingButton\n            onClick={handleAvatarUpload}\n            variant=\"outlined\"\n            color=\"success\"\n            startIcon={<SendIcon />}\n            className=\"shareButton\"\n            loading={loading}\n            disabled={loading}\n          >\n            Submit\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/watthananick/pet-story-project/client/src/components/dialogModel/dialogModelCover.jsx",["175","176"],[],"import React, { useState, useRef } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Stack,\n} from \"@mui/material\";\nimport AddAPhotoIcon from \"@mui/icons-material/AddAPhoto\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/storage\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nconst storage = firebase.storage();\nconst firestore = firebase.firestore();\n\nexport default function FilePreviewerCover({ onClose }) {\n  const [imagePreview, setImagePreview] = useState(null);\n  const [crop, setCrop] = useState({\n    unit: \"%\",\n    width: 100,\n    height: 50,\n    aspect: 1,\n  });\n  const [croppedImage, setCroppedImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const cropperRef = useRef(null);\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleCancel = () => {\n    setImagePreview(null);\n    handleClose();\n  };\n\n  const handleCrop = () => {\n    return new Promise((resolve) => {\n      const image = new Image();\n      image.onload = () => {\n        const MAX_WIDTH = window.innerWidth - 50; // Maximum width of the cropped image\n        const MAX_HEIGHT = window.innerHeight - 200; // Maximum height of the cropped image\n        const aspectRatio = image.width / image.height;\n        let width = image.width;\n        let height = image.height;\n\n        // Adjust width and height to fit within maximum dimensions while maintaining aspect ratio\n        if (width > MAX_WIDTH) {\n          width = MAX_WIDTH;\n          height = width / aspectRatio;\n        }\n        if (height > MAX_HEIGHT) {\n          height = MAX_HEIGHT;\n          width = height * aspectRatio;\n        }\n\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext(\"2d\");\n\n        const cropX = (image.width - width) / 2; // X coordinate for cropping\n        const cropY = (image.height - height) / 2; // Y coordinate for cropping\n\n        ctx.drawImage(image, cropX, cropY, width, height, 0, 0, width, height);\n\n        const croppedImageUrl = canvas.toDataURL(\"image/jpeg\", 1);\n        resolve(croppedImageUrl);\n      };\n\n      image.src = imagePreview;\n    });\n  };\n\n  const handleAvatarUpload = async () => {\n    setLoading(true);\n\n    try {\n      const storageRef = storage.ref();\n      const fileName = `${Date.now()}_cover`;\n      const fileRef = storageRef.child(\n        `${user.member_id}/CoverePicture/${fileName}`\n      );\n\n      if (!imagePreview) {\n        throw new Error(\"No image selected\");\n      }\n\n      const croppedImageDataURL = await handleCrop();\n\n      if (!croppedImageDataURL) {\n        throw new Error(\"Error cropping image\");\n      }\n\n      const response = await fetch(croppedImageDataURL);\n      const blob = await response.blob();\n\n      const file = new File([blob], fileName, { type: blob.type });\n\n      const uploadTaskSnapshot = await fileRef.put(file);\n\n      const downloadUrl = await uploadTaskSnapshot.ref.getDownloadURL();\n\n      await firestore.collection(\"Users\").doc(user.member_id).update({\n        coverPicture: downloadUrl,\n      });\n\n      console.log(\"Profile picture updated successfully:\", downloadUrl);\n\n      handleClose();\n    } catch (error) {\n      console.log(\"Error uploading cover picture:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const previewFile = (e) => {\n    const reader = new FileReader();\n    const selectedFile = e.target.files[0];\n\n    if (selectedFile) {\n      reader.readAsDataURL(selectedFile);\n      reader.onloadend = () => {\n        const imgDataUrl = reader.result;\n        setImagePreview(imgDataUrl);\n        setCrop((prevCrop) => ({ ...prevCrop, width: 30, aspect: 1 }));\n        setCroppedImage(null);\n      };\n    }\n  };\n\n  const handleCropChange = (newCrop) => {\n    setCrop(newCrop);\n  };\n\n  return (\n    <div>\n      <Dialog open={true} onClose={handleClose}>\n        <DialogTitle>Update Cover Picture</DialogTitle>\n        <DialogContent>\n          <Stack spacing={2}>\n            <Stack\n              direction=\"row\"\n              spacing={2}\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              mt={2}\n            >\n              <input\n                accept=\"image/png, image/jpeg, image/jpg\"\n                onChange={previewFile}\n                ref={cropperRef}\n                type=\"file\"\n                hidden\n              />\n              <Button\n                variant=\"outlined\"\n                className=\"btn\"\n                startIcon={<AddAPhotoIcon />}\n                onClick={() => cropperRef.current.click()}\n              >\n                Choose\n              </Button>\n            </Stack>\n            <Stack direction=\"row\" spacing={2} alignItems=\"center\" mt={2}>\n              {imagePreview && (\n                <>\n                  <ReactCrop\n                    crop={crop}\n                    // locked={true}\n                    onChange={handleCropChange}\n                    onImageLoaded={setImagePreview}\n                    src={imagePreview}\n                  >\n                    <>\n                      <img src={imagePreview} />\n                      <br />\n                    </>\n                  </ReactCrop>\n                  {/* <Button onClick={handleCrop}>Crop Image</Button> */}\n                  <br />\n                  {/* {croppedImage && (\n                    <div>\n                      <h3>Cropped Image:</h3>\n                      <img src={croppedImage} alt=\"Cropped\" />\n                    </div>\n                  )} */}\n                </>\n              )}\n            </Stack>\n          </Stack>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel}>Cancel</Button>\n          <LoadingButton\n            onClick={handleAvatarUpload}\n            variant=\"outlined\"\n            color=\"success\"\n            startIcon={<SaveIcon />}\n            className=\"shareButton\"\n            loading={loading}\n            disabled={loading}\n          >\n            Save\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","/Users/watthananick/pet-story-project/client/src/context/AuthActions.js",[],[],"/Users/watthananick/pet-story-project/client/src/components/listItems/listItems.jsx",["177"],[],{"ruleId":"178","severity":1,"message":"179","line":35,"column":17,"nodeType":"180","messageId":"181","endLine":35,"endColumn":28},{"ruleId":"182","severity":1,"message":"183","line":88,"column":6,"nodeType":"184","endLine":88,"endColumn":12,"suggestions":"185"},{"ruleId":"182","severity":1,"message":"186","line":106,"column":6,"nodeType":"184","endLine":106,"endColumn":17,"suggestions":"187"},{"ruleId":"178","severity":1,"message":"188","line":1,"column":20,"nodeType":"180","messageId":"181","endLine":1,"endColumn":26},{"ruleId":"178","severity":1,"message":"189","line":11,"column":8,"nodeType":"180","messageId":"181","endLine":11,"endColumn":24},{"ruleId":"178","severity":1,"message":"190","line":20,"column":8,"nodeType":"180","messageId":"181","endLine":20,"endColumn":12},{"ruleId":"178","severity":1,"message":"191","line":46,"column":10,"nodeType":"180","messageId":"181","endLine":46,"endColumn":22},{"ruleId":"178","severity":1,"message":"192","line":46,"column":24,"nodeType":"180","messageId":"181","endLine":46,"endColumn":39},{"ruleId":"178","severity":1,"message":"193","line":52,"column":9,"nodeType":"180","messageId":"181","endLine":52,"endColumn":32},{"ruleId":"178","severity":1,"message":"194","line":104,"column":9,"nodeType":"180","messageId":"181","endLine":104,"endColumn":26},{"ruleId":"178","severity":1,"message":"195","line":108,"column":9,"nodeType":"180","messageId":"181","endLine":108,"endColumn":29},{"ruleId":"178","severity":1,"message":"196","line":15,"column":8,"nodeType":"180","messageId":"181","endLine":15,"endColumn":15},{"ruleId":"182","severity":1,"message":"186","line":96,"column":6,"nodeType":"184","endLine":96,"endColumn":44,"suggestions":"197"},{"ruleId":"178","severity":1,"message":"198","line":4,"column":3,"nodeType":"180","messageId":"181","endLine":4,"endColumn":9},{"ruleId":"178","severity":1,"message":"199","line":9,"column":3,"nodeType":"180","messageId":"181","endLine":9,"endColumn":8},{"ruleId":"178","severity":1,"message":"200","line":15,"column":8,"nodeType":"180","messageId":"181","endLine":15,"endColumn":20},{"ruleId":"178","severity":1,"message":"201","line":27,"column":3,"nodeType":"180","messageId":"181","endLine":27,"endColumn":10},{"ruleId":"178","severity":1,"message":"202","line":29,"column":3,"nodeType":"180","messageId":"181","endLine":29,"endColumn":7},{"ruleId":"178","severity":1,"message":"203","line":31,"column":3,"nodeType":"180","messageId":"181","endLine":31,"endColumn":19},{"ruleId":"178","severity":1,"message":"204","line":35,"column":3,"nodeType":"180","messageId":"181","endLine":35,"endColumn":17},{"ruleId":"178","severity":1,"message":"205","line":44,"column":8,"nodeType":"180","messageId":"181","endLine":44,"endColumn":17},{"ruleId":"178","severity":1,"message":"206","line":65,"column":26,"nodeType":"180","messageId":"181","endLine":65,"endColumn":37},{"ruleId":"178","severity":1,"message":"207","line":72,"column":10,"nodeType":"180","messageId":"181","endLine":72,"endColumn":24},{"ruleId":"182","severity":1,"message":"208","line":187,"column":6,"nodeType":"184","endLine":187,"endColumn":8,"suggestions":"209"},{"ruleId":"182","severity":1,"message":"186","line":40,"column":6,"nodeType":"184","endLine":40,"endColumn":12,"suggestions":"210"},{"ruleId":"178","severity":1,"message":"211","line":22,"column":3,"nodeType":"180","messageId":"181","endLine":22,"endColumn":12},{"ruleId":"178","severity":1,"message":"212","line":32,"column":3,"nodeType":"180","messageId":"181","endLine":32,"endColumn":11},{"ruleId":"182","severity":1,"message":"213","line":164,"column":6,"nodeType":"184","endLine":164,"endColumn":45,"suggestions":"214"},{"ruleId":"182","severity":1,"message":"215","line":201,"column":6,"nodeType":"184","endLine":211,"endColumn":4,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":306,"column":11,"nodeType":"219","endLine":306,"endColumn":74},{"ruleId":"217","severity":1,"message":"218","line":316,"column":19,"nodeType":"219","endLine":316,"endColumn":77},{"ruleId":"178","severity":1,"message":"202","line":12,"column":3,"nodeType":"180","messageId":"181","endLine":12,"endColumn":7},{"ruleId":"178","severity":1,"message":"220","line":16,"column":3,"nodeType":"180","messageId":"181","endLine":16,"endColumn":13},{"ruleId":"178","severity":1,"message":"221","line":17,"column":3,"nodeType":"180","messageId":"181","endLine":17,"endColumn":14},{"ruleId":"178","severity":1,"message":"222","line":18,"column":3,"nodeType":"180","messageId":"181","endLine":18,"endColumn":13},{"ruleId":"178","severity":1,"message":"223","line":22,"column":3,"nodeType":"180","messageId":"181","endLine":22,"endColumn":12},{"ruleId":"217","severity":1,"message":"218","line":174,"column":11,"nodeType":"219","endLine":174,"endColumn":74},{"ruleId":"182","severity":1,"message":"224","line":52,"column":20,"nodeType":"180","endLine":52,"endColumn":27},{"ruleId":"225","severity":1,"message":"226","line":200,"column":21,"nodeType":"219","endLine":200,"endColumn":47},{"ruleId":"178","severity":1,"message":"227","line":43,"column":10,"nodeType":"180","messageId":"181","endLine":43,"endColumn":22},{"ruleId":"225","severity":1,"message":"226","line":197,"column":23,"nodeType":"219","endLine":197,"endColumn":49},{"ruleId":"178","severity":1,"message":"228","line":9,"column":8,"nodeType":"180","messageId":"181","endLine":9,"endColumn":16},"no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataUser' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["229"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["230"],"'useRef' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'Card' is defined but never used.","'showPassword' is assigned a value but never used.","'setShowPassword' is assigned a value but never used.","'handleClickShowPassword' is assigned a value but never used.","'handleEmailChange' is assigned a value but never used.","'handlePasswordChange' is assigned a value but never used.","'Cookies' is defined but never used.",["231"],"'Person' is defined but never used.","'Clear' is defined but never used.","'ReactLoading' is defined but never used.","'Divider' is defined but never used.","'Chip' is defined but never used.","'CircularProgress' is defined but never used.","'InputAdornment' is defined but never used.","'ItemsList' is defined but never used.","'messageUser' is assigned a value but never used.","'searchResponse' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user.member_id'. Either include them or remove the dependency array.",["232"],["233"],"'TextField' is defined but never used.","'MoreVert' is defined but never used.","React Hook useEffect has missing dependencies: 'handlePostUpdate', 'onPostUpdate', and 'token'. Either include them or remove the dependency array.",["234"],"React Hook useEffect has an unnecessary dependency: 'firestore'. Either exclude it or remove the dependency array. Outer scope values like 'firestore' aren't valid dependencies because mutating them doesn't re-render the component.",["235"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'IconButton' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'PermMedia' is defined but never used.","The ref value 'cropperRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'cropperRef.current' to a variable inside the effect, and use that variable in the cleanup function.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'croppedImage' is assigned a value but never used.","'MenuItem' is defined but never used.",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},"Update the dependencies array to be: [dataUser, dispatch, open]",{"range":"250","text":"251"},"Update the dependencies array to be: [firstName, token]",{"range":"252","text":"253"},"Update the dependencies array to be: [onProfile, firstName, user.member_id, token]",{"range":"254","text":"255"},"Update the dependencies array to be: [dispatch, user.member_id]",{"range":"256","text":"257"},"Update the dependencies array to be: [token, user]",{"range":"258","text":"259"},"Update the dependencies array to be: [post.member_id, post.id, showComments, handlePostUpdate, onPostUpdate, token]",{"range":"260","text":"261"},"Update the dependencies array to be: [post.id, post.likes, currentUser.member_id, dispatch, messageUser, setLike, setIsLiked, setPost]",{"range":"262","text":"263"},[3406,3412],"[dataUser, dispatch, open]",[3812,3823],"[firstName, token]",[2895,2933],"[onProfile, firstName, user.member_id, token]",[5397,5399],"[dispatch, user.member_id]",[1192,1198],"[token, user]",[5084,5123],"[post.member_id, post.id, showComments, handlePostUpdate, onPostUpdate, token]",[6273,6422],"[post.id, post.likes, currentUser.member_id, dispatch, messageUser, setLike, setIsLiked, setPost]"]