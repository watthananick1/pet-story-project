{"ast":null,"code":"var _jsxFileName = \"/Users/watthananick/pet-story-project/client/src/pages/typepet/TypePet.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router\";\nimport \"./typepet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TypePet(props) {\n  _s();\n  const [typePets, setTypePets] = useState([]);\n  const [selectedTypes, setSelectedTypes] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const getTypePets = async () => {\n      try {\n        const res = await axios.get(\"/api/typePets\");\n        setTypePets(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getTypePets();\n  }, []);\n  const handleSelect = typePetId => {\n    if (selectedTypes.includes(typePetId)) {\n      setSelectedTypes(prevState => prevState.filter(id => id !== typePetId));\n    } else {\n      setSelectedTypes(prevState => [...prevState, typePetId]);\n    }\n  };\n  const isButtonPressed = typePetId => selectedTypes.includes(typePetId);\n  console.log(selectedTypes);\n  const handleSubmit = async e => {\n    try {\n      const userId = localStorage.getItem('Uid');\n      // const userId = props.location.state.user.id; // get the user ID from the props\n      console.log(userId);\n      await axios.put(`/users/${userId}/typePets`, {\n        typePets: selectedTypes\n      });\n      setSelectedTypes([]);\n      localStorage.removeItem('Uid');\n      history.push(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"typePet\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typePetContainerCard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"What type of pet are you interested in?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typePetContainer\",\n        children: typePets.map(typePet => typePet.status !== false ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typePetCard\",\n          style: {\n            backgroundImage: `url(${typePet.imgPet})`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typePetCardBody\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `typePetButton ${isButtonPressed(typePet.nameType) ? 'pressed' : ''}`,\n              onClick: () => handleSelect(typePet.nameType),\n              children: isButtonPressed(typePet.nameType) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"checkmark\",\n                  children: \"\\u2713\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"typePetButtonText\",\n                  children: typePet.nameType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true) : `+ ${typePet.nameType}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, typePet.id_TypePet, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"typePetButtonSubmit\",\n        onClick: () => handleSubmit(),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(TypePet, \"WX1rI+s6fXlz4mr+dP5IU2Tjqv4=\", false, function () {\n  return [useHistory];\n});\n_c = TypePet;\nvar _c;\n$RefreshReg$(_c, \"TypePet\");","map":{"version":3,"names":["useState","useEffect","axios","useHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","TypePet","props","_s","typePets","setTypePets","selectedTypes","setSelectedTypes","history","getTypePets","res","get","data","err","console","log","handleSelect","typePetId","includes","prevState","filter","id","isButtonPressed","handleSubmit","e","userId","localStorage","getItem","put","removeItem","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","typePet","status","style","backgroundImage","imgPet","nameType","onClick","id_TypePet","_c","$RefreshReg$"],"sources":["/Users/watthananick/pet-story-project/client/src/pages/typepet/TypePet.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router\";\nimport \"./typepet.css\";\n\nexport default function TypePet(props) {\n  const [typePets, setTypePets] = useState([]);\n  const [selectedTypes, setSelectedTypes] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    const getTypePets = async () => {\n      try {\n        const res = await axios.get(\"/api/typePets\");\n        setTypePets(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getTypePets();\n  }, []);\n\n  const handleSelect = (typePetId) => {\n    if (selectedTypes.includes(typePetId)) {\n      setSelectedTypes(prevState => prevState.filter((id) => id !== typePetId));\n    } else {\n      setSelectedTypes(prevState => [...prevState, typePetId]);\n    }\n  };\n  \n  const isButtonPressed = (typePetId) => selectedTypes.includes(typePetId);\n  \n  console.log(selectedTypes);\n  \n  const handleSubmit = async (e) => {\n    try {\n      const userId = localStorage.getItem('Uid');\n      // const userId = props.location.state.user.id; // get the user ID from the props\n      console.log(userId);\n      await axios.put(`/users/${userId}/typePets`, { typePets: selectedTypes });\n      setSelectedTypes([]);\n      localStorage.removeItem('Uid');\n      history.push(\"/\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  \n\n  return (\n    <div className=\"typePet\">\n      <div className=\"typePetContainerCard\">\n        <h1>What type of pet are you interested in?</h1>\n        <div className=\"typePetContainer\">\n          {typePets.map((typePet) => (\n            typePet.status !== false ? (\n              <div\n                className=\"typePetCard\"\n                key={typePet.id_TypePet}\n                style={{ backgroundImage: `url(${typePet.imgPet})` }}\n              >\n                <div className=\"typePetCardBody\">\n                  <button\n                    className={`typePetButton ${isButtonPressed(typePet.nameType) ? 'pressed' : ''}`}\n                    onClick={() => handleSelect(typePet.nameType)}\n                  >\n                    {isButtonPressed(typePet.nameType) ? (\n                      <>\n                        <span className=\"checkmark\">&#10003;</span>\n                        <span className=\"typePetButtonText\">{typePet.nameType}</span>\n                      </>\n                    ) : (\n                      `+ ${typePet.nameType}`\n                    )}\n                  </button>\n                </div>\n              </div>\n            ) : null\n          ))}\n        </div>\n        <button className=\"typePetButtonSubmit\" onClick={() => handleSubmit()}>\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}